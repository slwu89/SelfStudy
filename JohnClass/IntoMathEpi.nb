(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    202222,       3901]
NotebookOptionsPosition[    199395,       3804]
NotebookOutlinePosition[    199756,       3820]
CellTagsIndexPosition[    199713,       3817]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to Mathematical Epidemiology", "Title",
 CellChangeTimes->{{3.693830631733068*^9, 3.693830638997201*^9}}],

Cell["Notes to accompany course material for PH252B", "Text",
 CellChangeTimes->{{3.693830648286973*^9, 3.693830657507494*^9}}],

Cell[CellGroupData[{

Cell["Ch 2: Introduction to Epidemic Modeling", "Section",
 CellChangeTimes->{{3.693830669994076*^9, 3.6938306771444597`*^9}}],

Cell[CellGroupData[{

Cell["2.1 Kermack-McKendrick SIR Epidemic Model", "Subsection",
 CellChangeTimes->{{3.6938306847205563`*^9, 3.6938306924854918`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SIRclosed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       RowBox[{"i", "[", "t", "]"}], " ", 
       RowBox[{"S", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"S", "[", "t", "]"}]}], "-", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"i", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"R", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"i", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"S", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"100", "-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"R", "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "tmax"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{".01", ",", 
     FractionBox["1", "2"], ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIRcloseSoln", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"SIRclosed", ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "i", ",", "R"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.693830865776443*^9, 3.693830878718182*^9}, {
  3.693830944805834*^9, 3.693830946353621*^9}, {3.693831006701928*^9, 
  3.693831139878756*^9}, {3.693831730328693*^9, 3.6938317937208147`*^9}, {
  3.6938318251862783`*^9, 3.6938318471762114`*^9}, {3.693831914421006*^9, 
  3.693831935587707*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "t", "]"}], "/.", "SIRcloseSoln"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "t", "]"}], "/.", "SIRcloseSoln"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "[", "t", "]"}], "/.", "SIRcloseSoln"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<S\>\"", ",", "\"\<I\>\"", ",", "\"\<R\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (Days)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5/4pouCv1qszM9pw1sr2nSCs6ZPZLL9eh6i7WKiP8D6DXdX7GDpoOLhyqozw
mMT653eddPAmOy6jlHAQz0zLjJsO0jg2KN8lHPGyoi9xnw5y39ilFRFOs1aZ
KziiA2H7g4nXCJe7KqsNZ+vAnb80IZ2wmtY6HYUrOsjzrotKI/xEZNr4yHUd
JN9jP5ZKuOlruSNPsQ5sX47FJxHu81M6IvVYB875E90xhNnCqZW+n3SwQS7M
OYRwvMOa2ntfdXCKo+xqEGFetT+Ns991MFziPBpIeM3C/bdJkzqQin6eEkBY
Ipbyt3CJLtxbG1m8CVukKSqPbNNFDN2/yJFwdr58mZ+vLgqUE17oEm7s8WjM
3a+LFKppmg7h3zxnezuCdNF8ToKhTdgkYJZV/aguime4J2iEZ+WfmvOm6GJj
RbK+GmGHhzZDRbd1keQufUSBcOxo3L/+u0R+p1F/ecIlmypXrCnXxeZ8S3c5
wlxRm6iRNbqoPzVhI0O4Qncw2qxNFyfnXzCkCK9tDds49lMX25dIvBEhrL1Y
ICPyRxdR1dLjWwnvl+vTspsh1pcPXka6Pp248ln1wD10x3gL4UP23GWpAnp4
zGL9eSPhzv4L5rIUPbS5ZISvIXz6V3V0YJgemsKWruQh13udtsfpqB72Sx4L
4iZsetdDy/C4HkYue3ZzEeY8wM0qHK+HF0bB15eS8zBsE9V2Vg9lzipWHIS9
Po0ckynXg0y77wgLYd0nNS4bqvQQ/M/Ik/TW3NOanDV6yLLa+2FxljhvJ+WF
98/14P1Rr2uBsOXbmMhTb/RgPO7ROUdYvW19xOhvPTxperx0hvD64tHdb//q
4aqDSMZfwlMpj9WezelhPOrsFtJ3jff+u8iuj5Kf+WrThMXrS46YrNYHy6sd
UX8I81cbHC5U1CfOI0llkvBg4aFQnyB9yBkN2Y8Sttu08CE/VB8326pnRgg/
/y/O4PsRfSiURGeTzgs5J+h7Qh/+4c1fhgm7a1ZW+WXqw3VCLOo74Q+v5hb2
l+vj57BU/yBhc92T3neq9NF6deA/0tXly9vHa/SR9cgLpLMvbr4S2KCPM09e
XPtK2HEvdILe6uP1/dbgL4Tf/D0Rf2hWH+PVE0oDhHX9eH+WLehDNSNy8hPh
++8zGVNsBphzflBMOr3uumTYMgN8N5GRJE1PaXgRLmSAi6/+besn3LJlGV+E
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
wE6d/7u4JHB6cZGBtWr/9/8AqRxCsA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$824#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JKj8a6bz/Y0Hwc0EVPZ17/X3/8//AOVxOX4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$824#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$824#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Count\"", TraditionalForm], None}, {
        FormBox["\"Time (Days)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 99.99999795918367}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"S\"", "\"I\"", "\"R\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.69383193440633*^9, {3.693832118975716*^9, 3.693832121745489*^9}, 
   3.693833047659713*^9, 3.6938472262371893`*^9, 3.693879637887937*^9}]
}, Open  ]],

Cell["One can also calculate the final size of the epidemic", "Text",
 CellChangeTimes->{{3.693831656715221*^9, 3.69383166572952*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"99", "*", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Beta]", "\[Alpha]"]}], "100"}]]}]], "Input",
 CellChangeTimes->{{3.693831676668435*^9, 3.6938317148790827`*^9}, {
  3.69383180797604*^9, 3.693831808542432*^9}}],

Cell[BoxData["13.398193040424658`"], "Output",
 CellChangeTimes->{{3.693831716657978*^9, 3.6938317448391523`*^9}, {
   3.6938318097379303`*^9, 3.693831841380444*^9}, 3.693831938669606*^9, {
   3.693832117072192*^9, 3.693832123313476*^9}, 3.693833050321938*^9}]
}, Open  ]],

Cell["As well as maximum severity of epidemic", "Text",
 CellChangeTimes->{{3.6938322295598803`*^9, 3.693832241214755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["\[Alpha]", "\[Beta]"]}], "+", 
  RowBox[{
   FractionBox["\[Alpha]", "\[Beta]"], 
   RowBox[{"Log", "[", 
    FractionBox["\[Alpha]", "\[Beta]"], "]"}]}], "+", "99", "+", "1", "-", 
  RowBox[{
   FractionBox["\[Alpha]", "\[Beta]"], 
   RowBox[{"Log", "[", "99", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.693832279919539*^9, 3.6938323555809193`*^9}}],

Cell[BoxData["15.845157764677822`"], "Output",
 CellChangeTimes->{3.693832356299892*^9, 3.693833051488537*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.2 Estimating Parameters from Data", "Subsection",
 CellChangeTimes->{{3.693832563671597*^9, 3.6938325685500507`*^9}}],

Cell["\<\
We note that the number of individuals in the I class at any time t is given \
by an exponential function; thus for a given cohort of infecteds, the \
fraction of individuals who have left the infected compartment is given by \
the exponential distribution parameterized by alpha; mean time spent in the \
infectious class is the inverse of alpha.\
\>", "Text",
 CellChangeTimes->{{3.693832623718779*^9, 3.69383267682593*^9}, {
  3.6938331263316317`*^9, 3.693833134248781*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], " ", "x"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6938330177658157`*^9, 3.693833029406251*^9}, {
  3.693833103809957*^9, 3.69383311631435*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nc8lV8YAHCiZZQR2a51Xa5x3SsKdZ4GLalklBkRESEUXSU7UWhQQkKp
aAhlVPIjZGdky973LSuj8Tv+ej/fzznvc97zvs95nlfG/pyx4yo2NjYndja2
lWvSZfs1Gg6JO9jYAr/RHK7vKGsiGZqT/BDbaq4opvAZ9O/zh2AS6RoK5N4a
6MHjh5JKoqVXk+4hkB37XbAQgc5u93H7Jf0Uffc3MH/TmICalp1v/5AuQCS6
uUJ2SCZa29mvOCVdhRpMofgk6y1K/ZLiOSHdjhJ+qz5Z3fAZzSbkKfdGtaN3
V70tnZUqkIFT9cDXxXZ08n6C2JWgCjTJ8cu0sKkDrbvtVVTFqERbtxvpXAvv
Qib3917riMNxX/5epUj0okypqhyZ3TXoyheVAxq2A2grZ4f8cn4DevHyWudZ
tXEUM7+dvYrZgsYFxqMO2I2jkJ0nrEOTW5Ci74EdlNvjSOKa0Cy5pAU91ONO
HVgcR5tkLMhiHK0orirqtEX5BDJsKZ8sDW9FvgM3f+61mkKUeBLQor6hFO7q
YH79HyjhzdOUdUHtyAk13pv0mkEOLgLPfip0I7ZH84Wd12eQQWWD4Mad3SiB
U6LrS/oMspITddxs1Y0qq05LPW2dQcwzff9GY7sRxeT3I0edWSRxqbAn9nc3
GnVWzOphn0MfiCDLdXU9yCUu4ENDzDzq4Sw9uEz7jtyHlAZyXyyiZ70f42Mz
+9B3m/Z1n6oWkQn3jVfPc/vQsbYItdrBRTSUw3erqKQPba0e8RsSW0KG1unf
itv6EMfrDD7h8CWUczvUyGBdP0pgyuy4YLuMCv8+M2c69qNPgqL3tvH9QVl/
vCJfiAwgLpkQxd6tbPDMunGo/9QgqtSLVb+szwY35KXL17oNorDjydqSxmwQ
tFjgoeA7iFbFvNtr6coG0g1Buw9GDKKlv5NO35LYgPFN3Gdn1iCa6DLNrF/F
Dj4jFSNd04OoJkFRqaSGHdqSS2Tn/YfQDb5q5dSTHBB1/xJ7y4VhVKAtmWfk
zgFm3gFRv64Mo0Gbc+j3JQ7Qe6JMFowYRrrZgibm8Rzw7tyWpC0Jw2h0v1UA
bx0H5LzO30F5N4x2B0/V++lygk6glUPV/DBamNvoYyy8GsYTT/fJnhtB9p0m
Hzlq1oCkyazfyUOjiCuxz82zfQ28q5B53nRsFOVYuEv0Dq+Bs/zl3jstRhFH
R7hfIftakD0fNsDjNIrS2woZntpr4WRBY9apwFE03ELK7Hm0FsQ6VRo35Ywi
l4bJmAK/dcD1LiAvjX8MeZaH2J9T5AJ5ixZ2y9IxJDVosGaewQXabx616VaM
oepV658xgQseGUKvSM0YUoDon9dOcME+5dbwipYx1F54JzD9Ohdw9B2+92t0
DO189Ti5neCCsdD1hzI2jCP+xMqO3e+4Yc268D8HzMfRaw+eYyL7eUF4gh5z
vGcc1dwX9Ms24wVGLefQ6/5xNFwmlrLLgRdkdu6LXDsyjsRElSbOXuGFrJGU
r08IfG4+6Qd/yuOF/iz718VsE8hM4MobF9kNUD9BMdWRnUBLb34Kvl/eADPZ
nNL37SdQ6iXXcZo5HxifSvoV2T6BaCXrF8Kt+eDBJdvnTV0TqIQzc3XvKT5o
3DNcLvp9An2PHiRFe/DBcJOfdvLwBJJ6aG0+do0P5H2G9CNmJtD9ssNlqcV8
cJXBaurnmURxvJrJArL8EFmwLvjj9kkUlPL76OwkP3gLeGQEJkyiI7R3ntQZ
fsjdCG/kEyeR1KfzsfaL/DBBTcn9nDSJCvvHGxpWC4B7q0MCZ9okmlZoP5wt
JQBxuYjPOXsS2WflHTp9RABslP6Tqv80iXYWuO9veyMAwYc+O1DGJhFb03co
9heEyUqkd4I+hULGPqT6XxWEZdVqWp7mFFrPlrRqW4QgRLLzK23UnkICqifK
8u4IgtE1P+p73SmkEN649+UrQfieo/aYXX8KHdAtNXo0LAh9VJl+VfMpdCst
zSrCeBNksUWlS/lPIbL36YsmykLwxdz1Rn7hFFLV6T2WQhOCqWsC/FeKp5Am
23H1cS0hqKJuUTX4MIV2Re0fvrJbCCaljLUaPk0hm3QVk+dWQtBADXzWVDmF
7jZPq6+6KQS8A9d57rVOodVbroy8nBGCWS43MYWfU2hwLt6M+70wdLssNPjL
stCjnYzz3f8JQ308vz6/PAvZRtfdfPlFGC6rato+VmChDvnVVcfahEH/ilpk
DYWFGo956T6YEYau60THOnUW+vDakKSqvBleFGg57NJloXg39nGj+M2Q6VhT
WWLMQgeGXALiPEVg7sz6CwqXWcggQC5rz0URKKtdGHK6wkK7hLo65i+LwMSR
i3ufBrKQjv6hrZZRIiBx+/kQJZiFlDPUZ+SeiMA+kukT8QgW4nacdc7rEoFG
YoCtIZaFagYDTNr2igKxQeanXzoLGQ3GUKWkxCCZevLZv894nDrYbCUvBteP
saXMVLDQwfPalxOVxaDjHLNluJKF9q3qaRDRFgP2ruNc1V/w85CovoJHxODG
i6K0yDoW2mJVXrIuSAxmzzI3jbSwkETzounMkBhMXo1pFBlkofH/7AMrs8XB
pjzMJ+AvC0nHtrncyBWHjU9HJM3/sZCJjZGpSZE4dHkd3kBjI9CHhW3K3yvF
oVIrtaqXnUBxqvzNvwbEoXm/epHWagLpxn9UVBSTgJY7Fhv/4yZQlItEfWiY
BHR+Wh99QoRAavytkrttJcFwPrL1gTqBhqOHg+44SkK2E3XXThqBkrh+jYy4
SsLhP3wqQ9g8nCI5URclofHNHiaVTqDx+RMGrbGS4B92VjRHk0AZXd3uZ8ok
4Q7xNPnJNgJJZA59vKkkBR6V9BCt3QTiQnN2XTNS4FUkhRZMCHRxJ2Vd/pIU
7GPanY80xevvtnxxk10aJFmZyhJmBCrd92lp10ZpsB36IbfDnED+xtG3nipL
A+f2v4bMEwSacFQo97WThpzBl8191gSqiTKl8NdLwz09+1CT0wTaO2XxS9aU
BMHD9dlTPgRK3hTcdOU4CSzPK8TY+RJoVvf5yy5LEnCNavO3YD+MXHa6a08C
yZr2H4UXCLSk+KBtvQcJdBxZakF+BMqy7y74EUmCLiOHyb9MAvG12TI/lJDg
JLvOzTfBBGordWC3UJGBP9/uFIjGEOjHzg6xAHUZkPnQcMITe+2nw5oP6TIA
TLe8SmytjzpOw1tlgNiTluIbS6DbRXy1XvoyEKvTql8fR6DDucUJ121kgP1P
0FrvOwT6nLGJ9j5GBsgiw5VR9wmUF1FmQ5qTgbuyF7nWpBMo80C1SPiCDDyt
bZYywb7P8/Xr1LIMcKiP/UjFDozpNShaJQvd86L1ehkEMkxYUjPjk4VTdm/9
zj0mUP8T2r/rVFlI36XwrjKTQBsqHqT8spOFWufzxobZBDq92ud7XZ0seKRk
09LyCCQmXfVtuVEWwqu/yvZg122VrKe0yIKUwY5hkXy8v7Pl74M6ZeEdjdkX
jb2mSShRa1QW5ArvZfu8xfnyMN80mV0OTvlTi/UKCDSou/DFTVMOJpaOPX9a
TKBTXpfyeO7Lga8QbF/zH45H78lTSpIDr0Dth1uwuaYh3+ChHHj6WvY4YL/y
XPM28LEcbHBKnCzF/u0R+242Rw7YdTabBJQR6O65J0Vd1XIgdeuO00Q5garO
Nn3K+iMHZjyLJ7MrCaTuRK0ztJOHaIcky7paAvWckT6X7SAPyrtDni9gR50V
5NvgLA/+MiXfZOsINOa5fLTeXR4S170s98VOY1a3HGXKw1rl7CWJegJtjnPt
NouXh4jfc/32DQT6V/x88mStPHDwbvBt+UqgegEVbp9tCjCRW5Nm+Y1AO9zc
xhL1FODeiH3SJewXFS8qSnFXdyU1BiRi32BqhPAZKMCZjyEzHdiGw1p/nhsr
wPL6c7nH2wj0pWAn0e+qAPLiR5IOtxOo/KR505FkBbB+pRZD7SRQ0YugRBUO
MvAI8Uyn9ODvYWgqFr+GDI+Xr54uxj46pniPnYsMX43zStuwR+Rq77bykUHh
z2M6fy+BBO9tjguUIsN5/rnpQGzX4KyI5m1k0H+yuMbqO4HEj7f6MD3I0JjJ
v5a9n0CX2JWP1HSTwYEEoVxD+Hzv4W4j95FB/ACPsAz2kYhJ26uDZDDZMHdL
G1t+48tzWhNkeH3X0twBu0ZC8+bDBTJs26z5txhbauuOOm9BRWgOTmt3Gcb1
wd3YUHK/IgR12GkUjOB86PLf556rCFkknety4zhfLjzlvflWEV7f/PNAE9tO
oO3ry0JFMOd2S9XHfrdvi/XPEkUoLPELcsI+nUd4etcqQnK46+Nn2J9uOCT6
DyuCx9HUy2oTK/XKiBUmQoHEkR35KpMEGnosczuFSYFBkWfHV7MINBnSt8gR
SIEILt/YTdjT9qm2zsEUqKm2eS+HzSYtQ9WIpMD34zmsndhi8aTS0ngKnO6M
eReAfSRc+sdQDgX8boRPT2MXO0kaqoxRoNvHaV8zgesDRZSzwFQJFHdpZHr/
JJCVDfnJwHElUEhQVQzElr/NOLDBCrtEMOk6du6/QzGn7JVgk26h2yPs5tYg
iQ3nlEAqTjutHlswdFLzVIQSGPFKO1Kmcf/o++jIW6QE0N7h3YQdc/90hR1J
GQooPpr8swS64Bt0nimnDFv9Is6LYdsYJ0vHk5XBJ9HzuRy2ClfrhRoVZegL
7VythV3lp0/R3qYMtuaZjhbYq07IX+MxVoZ2uYmWVGyfzf0H3gYrw63tDsnU
OQJZ3Lau4xlRBt8qt0nqPO4fb7jEXceVYVtUnromdm/jW6eqKWXoWOI6q4ft
sFGAPWxWGTgY8/WG2O6Rnxn/2Kkwa+uh74YdFKh+76cEFRqOzE9kYT89y+7Q
akyFglsORoq/CLSwJ2Mx5QMVZmby49YvEIhZlBJc9okKx8YaGjdis9Hv846V
UWHYmZNHGHut9E0ZejUVuBwqPGWxhRcv7i/7RgWmOoVDF5uRbXhv9AcVNAMf
gSu2u9DsVg05FchoOQiV2ANDuy6WhqvAheGyzT6LBNqVUvdI+boKhDrNPfHH
fnjcojbuhgqIj7owArFtqj1lT91RgRPLmnrXsTtePazhSFOBZEaeUCr210t/
SfofVICb3D5RjV3KX1hVMasCte6JSGqJQI+2a4jX2qlCDJnTOB+71IgreNlB
FTJuzIQUYvfbDowrOasC58no3A/YckF3CsPcVaG+6cv6Cuz0z4sn4JIqXEnO
j/qGnXG4NOHNbVVQGY2f/4WdaXdM+H6FKrx/uves1jKBskN9+J1U1eBmM8np
GfaknnVQKE0NZNr+fs7GVpndM5PGUIO9h/TkX2M/s9/U8n2bGigWdLe+xc5E
bxIsDNTg+MUZiXLs9MUf0ka2alDqraLWi33f7azallg12O4U58X/m0DhpqcO
csypgf749kl37EeHu6wcF9TAJmAr4YldvN/UvWJZDdr4Mwlv7Onte2Ovr1KH
zibWqD+2FZn6TZBPHWzOmL0Pw6b/mraXp6oD47QjkYTdkxDkr2+nDkncA2Ff
sLd0pT4Nr1UHbfHOHxJ/cP9Xc1542aAOukPm2tLYk1fU9rY1qcOue+uZMtjp
ckWDlA51iHDkZyNjb3Jtlv4yrA6UrvZpNewlJsfBNWw0cN4YGgLY7dxan/aJ
0kDOvNTOHjtBKTG79iANWtVsDFOxZ2cMMoIP0WD/bn/jNOzDH6YfbDtMA+ZA
p1kG9ppjB6IyjGmwK9vH4im2D3PRJeAEDZpdVA69xjauN6eoOtFALHm8rwSb
x2dTWlQQnu8f+bUH+0pJdMLBAhqoKoWLC//F/3fdJbcXC/H8Vv38zdhmyzMx
T4ppkELKOiyKraJlcY2jhAZX+bwvS2C3PSf7F32mAV8eX40sNj3+oyW1mQaR
td4Udexht59S3AQNtpN8pwywD4mbZnyR1wDav/E+L+yEQbUSS7IGeClEiXhj
D2av65xU1AC3ozpGPthMKObbSNUAzZyS/AvYWY5yzGMaGqCjF8lkYnO9+mnc
tV0DVhe+6QzFrthzg41lpgGuAtZT8dg73Sss+a9pQMAXxZAC7KW2MYOySA3I
5V57rxA7dzcP/UKUBhwKXM4qwiaLHl3XfVMDLkorfn2PzVPWkZt5VwOSmpL5
S1f2K8rihXQNEPxe6PgF26N8U4n7Rw14fKnDqQM7RcJevmZOA+JsrZd/Yesw
qGr2vzTAnuJas4DdvH9We2FBA346Nz1YxF53Ieyg/G8NULHO011eidf4zIu5
ig4PjGo9/2JD2EyJykY6nBl7/5HzHz6/RIh1NIUO/qsEhvmw5f97ctfIkg4q
HpW+ith1KgvpXVZ00KvslaJgX7y7742LDR3o6d6fV1x9Zqw+zI4OOUyRTcrY
XnzU9R+d6PDt1bGnKtgfrV9cUvemw29VokgD22Ih9yRfNB0SJE+F6GLHqJYq
f/1AB2ueW/mHsDO3Wq4PKqHDLEe+odHK/btnRzRK6aAebdG/YtYJckZsOR1E
/irxHME+GBYpfbSGDm2jUyeMsdf0Gm9qaKdD81bHHjPsSzEDf2pn6SCb2xFt
i316hrOxSpkBB1I2PziHbfNsT52VCgOE6mJ4PbDN7EKqCVUGvK1/dXnFBvUc
n4U0GPDg1LCtJzb5+aoiO20GvHRRlzqPPWTPlrG4mwF1Sj6RvtgOX5cvKlkz
IEv0sVwAtv3radK1mwxQfPTs9DXss0HHfh+IxeO013Ur9jmW+43nFgOWA620
IrEj5nxuxNxlQO3jR5zXsV9sW1yOT2LAWP7cgyjsxU//Wh8/Z4Ba8HLxzZX3
95UnuqyCASnvHhTfwb6f5uYcVsWAmpONonex07zrdu+rZoDhvlzfFecLxyxV
1zGgbSZUPR67y0LQuamFAQGhJ5MSsBUHRHf3DzDAj4vmkohNy/WXSh9iQFzx
mdIV64R2LjqOMGAfj5nYA2xDxaRXY+MMaLq1t2rFXq4kqZ8/8Xqpd+SSsZl6
VxdzZhjQk+Lqt+JQ3v5m7zkGJJjM16044WXa9YUFBriNKvulYD8K5HQqXGLA
1IGW2hU/P+q4i/mbASddtsg+xM6V/Sy54y8DRsMP+q74wwx58d8/BngMbv6y
4v8B1owFPg==
       "]]},
     Annotation[#, "Charting`Private`Tag$3781#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{362.63671875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.693833029793284*^9, 3.693833053787426*^9}, {
  3.6938331085544243`*^9, 3.693833116722727*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.3 A Simple SIS Epidemic Model", "Subsection",
 CellChangeTimes->{{3.693833249491323*^9, 3.693833254214837*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SISclosed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"s", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"i", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"s", "[", "t", "]"}]}], "-", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"i", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"1000", "-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "\[Equal]", " ", "1"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "tmax"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{".001", ",", 
     FractionBox["1", "10"], ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIScloseSoln", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"SISclosed", ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6938470821964283`*^9, 3.6938471409842176`*^9}, {
   3.693847171012175*^9, 3.693847201768462*^9}, {3.6938472371678553`*^9, 
   3.6938472596871347`*^9}, {3.6938472944474907`*^9, 3.693847331554594*^9}, {
   3.693847578413116*^9, 3.693847608246169*^9}, 3.693847831148952*^9, {
   3.6938795670636806`*^9, 3.693879568238583*^9}, {3.693879618876234*^9, 
   3.693879622246443*^9}, {3.6938796575966167`*^9, 3.693879661693954*^9}}],

Cell["\<\
The basic reproductive number can be calculated from the SIS model as below. \
This equation is because the classic R0 applies in a population of only \
susceptibles, that is why we multiply beta, the effective contact rate, by N \
as we assume all N people are S. We divide by alpha because beta*N is number \
of secondary cases produced per unit of time, and the infection lasts for \
1/alpha time.\
\>", "Text",
 CellChangeTimes->{{3.693847754214398*^9, 3.69384776606382*^9}, 
   3.693847833150226*^9, {3.693847941776767*^9, 3.693847976431622*^9}, {
   3.693848014236679*^9, 3.69384806849658*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Beta]", " ", "1000"}], "\[Alpha]"]], "Input",
 CellChangeTimes->{{3.693847768643619*^9, 3.693847777205868*^9}}],

Cell[BoxData["10.`"], "Output",
 CellChangeTimes->{{3.693847777642069*^9, 3.693847786605657*^9}, {
   3.693847823128772*^9, 3.693847852372274*^9}, 3.6938610618224297`*^9, 
   3.693878932636698*^9, 3.6938795814386463`*^9, {3.693879642951303*^9, 
   3.693879664800415*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "t", "]"}], "/.", "SIScloseSoln"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "t", "]"}], "/.", "SIScloseSoln"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<S\>\"", ",", "\"\<I\>\""}], "}"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (Days)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.69384728091427*^9, 3.6938473039464483`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl13c81V8YB3Bkr4QQkpCQ7L3ux77IliQ0CJllJaN7hci4CmmQNJS0EBpC
9QspIWlIREMqLWUmft/v7Z97X+/XOd/7PN/nnOe8zl25LdJtOxsLC0sS8UF+
y+X9PVMqc9dMwnX3woJ+Hq5zK68IDz5J0fbjCRkifDf+ylml4KuUqVNaXncI
t2rsCuIMbqZ88WFc30v4QU4PdSKoi+KRpu8woZeHH2n8H+Mrn1Ce/LIvfkI4
+b+rylNlTylF3X1+lwkXYfLKr9wXlK5bTfr+hNuNUm+OBb2hRGqEjLfp5uGi
iche3atDlG9/tctOEv7ZH3AypnKYcjSLejWO8F5J7rfjZe8owl3XP8oRPnLE
Keh77kdKxwmLxGidPDw81L9rNOg7xfUd16txrTxkHi1qL9D8Qck9ahHQTFg1
mOKtffUHxXHARiGbcBTXocSoyp8Uj42hhrKE5611mn6U/aJsvKriB808nFo6
4HRQ5jdFufahKSdhqw/pb9RLflO8dysbPtLIQ3baC5bIIxMUjbtmsW6EJf5L
sPyaO0WxUbU/uV49Dw358r05fNOUdwnvpkUI+23rCFA9ME25f27Q5YlaHs6y
yuwPTZuhFHlfGqMS1sTdB58S/lBuJbf4r1mbB/tGLqeRoAVKcy1/9k0VYnxh
24TYjwWKs+uTBj/CObKbO+VNWDCR8COEjXDMtluxHvdZoLQueY21MpHvyM77
db2suCD8jXZ9dR4MMmQkOiXYcFJJ9ZszYVWljtARHza8qPIsH1HMg0jIahHx
D2xw3pbbI0j47deBrfETi+BuemKDnUIenjOy6w4asmOa96PZU3mi3uqGPBeS
2XHoc6bWJsI1uwqr+jg4oPLIfMV2uTykTNgvGIlxom9mWGaLbB5k/14v+avH
jbCY6befpfIgWrr9x9JEblx/+DTGlTA3RcRKrZkbZf5d9DrJPHynR3zxs+WB
sk7NYOyyPDSxrzK6s4EXnaUCu5+LEfHKe3JfFvPi1faZitWEz9nQh3+84cVz
DaW52KV5YGT2Z64M5kOpy9RLHtE8+PLnv9gXz49MxZrlAkvy4HKZsqb4Nj/C
dYt4bYSIejl93XuNRQAGzk9qExcT9TlIVXyfKYAHbnr8AwJ5mBNZiLE+Joj3
8qZucbx5eCygx8PuK4Sx8b64SbY89DgIH+1MEsJ13pYODsIvD3xTPFYihLXF
GXuXsObhPcd5K7XXxLhe/O3lCwzM/RWne21aAvfeTVzcfxhgM/ktKJ+4BKGT
f85OzzDAndB94uvxJTiw4ozyh2kGRCYzG/a9WoLlxzZdrp5kQOXbzOSljcKI
0j/2Q2ycAQ3V5+m79whDnhor/uEHA3ohNaIWx4RxbnhN+ZXvDFiMhGi9eCkM
rSTDau2vDGwc7A9n9RLB41emVYtGGcjsbHy/3lMUK39GBFx8zQCD/3i0bJwo
bif/Ora6n4FC+zi2L4dF0X+DW7C0j4GTrWqy9Gei2O4dv23Pcwbqm05uqvRY
it023l4fuxj4cCWlZ95NDEWPz/fn3GXg85jv1vYoMYi+z712upmBHypGPwry
xbA6t8yvupGox7lxAeUeMWgPZT+4cZMB0ZP+du6u4nh7wEQ+vJrIP8/6znln
CUwopU95nGSAbl97oSdCAlxBo1+mShho4pAv+JsrgcINiZvyjzNglMQS6N4h
gQEaFZcPM6C9o4FvgboMtZUXheKzGVCw1NzgaSGJ/TpPqm1jGdg2fxIpWyXx
plvmkUcUA2U3BVUu0SWhKVeWtiGSAWmNsTnWZklUSCd6mO5gYOny86cvG0vB
esHs8X4fBjinpL+x60rjVDrX0t9gwKom+4W6hzTW1MgfcTBlYF/47B3vaGnk
58cfLzJkYP7di4KqamncdKst4tRiYKo739BHbTle7suh28sxMFrJnX5ttQyW
BP/Xa87CgGLg7ohBGxmoavBuvPMnFwErRzbwBMpA6MkdIY2pXAwd+U9l81kZ
PH1+gf72ay760vZ2865cgYTMUdW8V7nYrj4roCkgi5zNz0RGqnKxrj+jXEJG
Fs/3/Cr7WpkLnYylpizqsvg14vZ16Gwu2N9ohHW5yIKnW5Et62guTjOCHoYX
yqK43LN7aG8u3nzt3V8ptRJXVwvG7rbNReuxbTL5qisR2B1zTgG5uGL9o26P
6UpILnlYecsgF3tP8H2gbl6JFAWt+DLlXEg7Wlh+PL0SUsm/bznx5mLjpasL
8ipyiHkv8U6kLQfwMj3CZywHutamg8ZNOVBif6T2y0EOF50Tb9rV5WB604jv
vXA5ZNu95lh2JgdFfMtvb6mWA+/zvevpyTl4GpIVf8JAHnPyPjf81ubAUXn7
TzFbBTyzmb4nsCcbs9mxDQOeCqDs3rW9PjwbFd/S088GKiDBulGSui0b7LXn
lmntV8CH+vuiqx2yccts1NyxRQF/wmMrn0llQ9EjND/VchVWZPxdWHwzCyy0
Xdo/KIpwe8wuqPn+AGp6k2PbDZSwc8HuyVP+TFSkB2x7a6eET8f2LjGcy0Cp
noPzH28laFo1eR37koGsoxLKa5OVUKW1x93xYQb8fa69PnhXCS4VrqEFGRlE
34xaetkrw7jBd+NytgzE/XIX/rhJBZHU6C+Wf9IRdtZoYSFMBVsi+nNVv6Rj
2/qVYxJ7VbDYwS5drj8dTte/tdiXqUAz/HiCQUM6Vice2HPlvQqS007FSial
4yVb81Bs+BrELDsXIc2aDmNhlavsNFX4tt2jPpVMQyerd/vjPFVcXPysME4g
DVt+HnhXVKaKr8ZCQlosaUjr/iSufE8VHAylgPEPqehkXKA7cqxFTyV714ma
VGzhU3Yryl6L+ovryhpdUjE+6xW2uWQt1lNOnp20SkXa58z9SpfXQq9fcsTO
MBUX2kdv3epci4mR3nUUOWJ+RoX8myVqGJDSfhM4sQ9p7EoTq4+qISI+Yvml
sn0Q+71h8c8KNXAmSURlF+1DxbsM5Vs31SCY+FAwPWcfHt/76LuuXw23+ixe
tMYT81POt+6UUcfzRl6vfW77cOGv4tGbZ9Xhn7WjtIV3H0y+etbsq1NH9jEd
UQrbPnS+3t/h0KqOUskAypOZFIw3jLAMflTHEuplXcqnFMiYPtVJWaqBnQP6
z0zbUxD0J/9EuZcGsl8stzuTm4JCp7H/9mzRANsdT73FGSm4c8r6s2OwBg7d
rqcz6CmQoE7rTe7WwMWglcWt0Sl4UOjbbXNEA8dvin+W2JQCZTWlRaPPNOBe
e1t71doUeKakKN8e0ED6mH5m3eoU7Ot95Xzwgwa+eXQNesql4FVCbonBhAYS
YjD5SDwFWW3jugdENXFf53N64qIUfNnSGKziroklVnSuzgE6JGrF8ua9NVE7
waHt00eHFdfOup5tmngUwvprupeOkstybIlRmqiJvHXEt4OOdbMZxY8OaeJ3
0SvbrgY6Lhe4dYZ1a2JUrCJA+wQdr0Yu/sZLTchxlGsdO0YHpxGH1NIhTeRt
gyVfER1+Q9eDGr9r4uZYWbFIHh2Ca5ezCi7WwqfkQMfqFDoiWz9qX3XUwne2
jTaLdtBxB5dCVT21wNZRND64nQ6hhp1nLvhpoXXr2azWbXRUXZ0RPhuphb/n
V7y74UPH+FG+8aOHtJCbt2Z6lSsdFiLdymLHtZB6JanFx4mOgtzCrQWntbBj
EY1a6kCHzr7lT3KvaRH9tPo5bOiIC1Wv2vdMC7/rzqqxmNDR+uHXx4UBLVgv
a6/ONKRDfMuNFckjWjixaXOnpD4dNzzM83ZPaSGpeLXdJi06ZkzdI8KWaeNV
2KU0O2U6koR2q3r6aqPAuTOxWYKOjizjgKfbtfGuqIHaI0bHcg6WEpcIbWQI
KdaNidLRNJPJ50DTxkqWJawGS+hgeXf8M+WUNkKl2eNW8dLh4rtZrvGCNrGf
EpyjuOk49ULe26hGGzZrWn+2cBLv23GpXec/bVB9BlelLKIjta6pQvmDNnaE
3zE8MEtDr3rq0Lmv2mg4bcCSNUWDQqWthMIkYSvH3qLfNNwv7c6Q4dIBJ/f4
56ffaODMfBsooqyDg2tn7j5/R0OWN+eqv2E6COCaNnvVRYOZBv/kpxgdNKT0
n7nymIafHMJtz5N04PamD9mPaPCqXr6jKkcHoZLK1T5tNKzi1r3sf0kHtW09
G32baXg5YLTXpVYHftuFQ3Y20pBzDc6mt4nnR+KeZDXQMO637qdYhw50/tJ1
n12n4U6dv+7DLzrYNaXg21hFQ0z2Ds7rv3TwI8Bel/sqDau3Rr4480cH4fFh
RRsv04j7TOKeZD5dTJn1FyyupGGTf36jxhpdmPL0vm45Q8Ok0F3rIyG62Cj/
qtP2KA2VI61iaVG66Ksvi/9RRIPv7Y6POxN00ZpU71B6mKhP0MsD9lm6OCvg
LM1TQMOhpu+P/17QhZPrAadlDBqsCidKP1frEuf7T6VPOTRM7/gT+eKmLrZ8
HjzWmE2D31Iu4ep2XUSxvZ6NPkCDapiMZ8AnXciYub0STadhyFxhtetPXYhX
vD7AlUZDgbjKtOmMLnzE79vO76Nh9p7ucXEePdwKV6+botPwYJnj4EMlPZQ1
nW2XSKbBvy0xUDNYDxfVhOK44mgIMFF0mozUg82Z3wcMYmkIrO7WbditBx1F
ieqwGBqCi1dxWGfoQfDqHP9gFA0RkV1nvM7poUXHr/VdJA073+/JXn5FD3xp
vhRVwrs2KkS/rdND5SGf6N0RRP0t91iEtehBRdl3aGk4DQni8sO094QXbjfs
CqEhKefxA6sxPXhKjo137qAhmTW+iue3HvH/QeCoGmH6lw5awSJ9FPm0c00E
0bC/OU7mvJw+MoOS957YTkN+0MNNnVv0MVSpZ7F+Kw2Fr2MsC4L1EbBRnPps
Cw2HXVes8dqpj4y+Bf0NhI8ax8wO0/QhNTF1fctmGkoXyxybKNUn+ngu+IAv
DWVpD+i3zunjnpDUuDjhUzNRwbQr+ghpTltb4UPD2Xdt+jxN+qBvPXn68SZi
P1zf9Vx6QB8Sj2v61njTcElVumn4vT7alL9R2zbScPlUa/m5MX2cTzYzDCBc
lS0VqzGnj+V1h9NOe9FQv7lFxErKALRXRms1NtBwl2uZa+hGA/ROHvbK9qBh
5Iyafd9WA4h4tlzRJcwPK0vbEAOUe3kFD7sT/RMfqSufaIDYoV0/TAh/H21Z
1l9iAI7DzncWudEgmt4vbFdugIo0rxM3XGkwWvmT7/plAySYhV+LILx/o/R8
fpMB+iMPxg660LD8YdRb+yED7CjVvPvImQaLwMz+G6PE/M+CLw8QDmYr7VX8
aYBTbUdY7QjXGrW3srEZQup0beJDJxocLq64eEveEEI96w/3OdKwJ6cjWiXI
EClF7tcU1hH1VnobdjTSECKfxNnGHYh+uT+1nTPeEHXnYxTuEBb6K+f1NtMQ
qaNXn/sRPh++x+R4pSF6fxkUltvT0MGTp8t9zRChch1yewiPl59Vi2swREdD
cIgjYbPBLlm3DkP8uVciPm1HwzMnRQ7eb4bwPjtdvJ7w7Gfj+d2ThpCJWHdK
jbBshuvUh3lDaOdl2HETDmtO+nR3sRG2DbrGN1JpWKTx9PEeTSNEvc3kVCes
uYRe9CnGCMYcp2tVbWm4xf1CqS3JCKb6IbeECFuwqDWcTTPC0LHotRM2NHh8
73+zudAImr3VHs2E4x7rKz+/ZoTl7tf2eBFeuM9ouNZgBEv4NFAIZ97+4Hjo
PyPkmIj5riZ87GJB1LqnRmir7L81ZU3D7QPfG+6NG+Hw/eSGEsLWKTZOZbNG
EKx//WI/4c74E0PJbMYQ6Gu020X4TZADh6GwMZ7lvlGyJcxmc97pqqYxZCoZ
VZNWNFDZNg8X7zTGtMT3Ln/CT2bqovfEGyO/QLzKjbD3T37ODXRjrChRfmpO
OHTolorwQWN0DywalCXMaBKLybxqjNs9/p+HLWkQrw/nDLxujOVhF1t6CJdd
vn/UstkYY2Vd/f8Rri6JapzvNMZsyI/ac4R7Ezo5Y78ZI+ykE3skYd+oVcfc
Jo0RvH2ydCvhkR1JazTmjbG4ZDrcg/CUl4rLFwETFMd+LDciLKm//9jWtSZw
PhQWxEN4yy9TVacwEzDyavdftaBBQJiluzfGBJpaj1TPEr6lcS96U7IJ+L3H
2Y4RFo2waQhmmEDioptJKuEHo072qVUmiI7Y+3gj4ViuJd94bpqg2tNk0Jmw
nOLTQwfvEvFePpKwIZzkv6HvRI8Jvl05ya1NWGNwc/CN3yaI1+K+J0h4YG4l
P+WvCforMxdzEs6Sen+1hcMUKn+HUv6a0/DeK3iqR8wU83qVPWOEjz7duf+r
gSmKtYtEHhNmaU85K5dsCoWTOwsKCF/+aEm9kG4KdbuCTzmEvTk5x9QZpmjx
+blpP+Fayyxt05OmEIhJKNhDOLgp/96Gu6bY652IrYSXDngEDrabop7TLHQT
4Xt/xHi395iCIXn4ynrC0obFrlHvTHEieX+yPeHua2eGcjjM0OAiq6VLOLln
e5qIoBmiN2qIaxBW+bla6biYGR71DC1ZQzhN7VLk+dVm6Je6YLOSsMGF2vm7
dmY4uj3zjCDhU6Ut0lO5ZojsZrwdAw0lPqov1heZoXd9JN8nwkclCw7Vlpph
l7Gt1QfCjKItnFFXzfC1qPX9AOEExp/vY91mmNtA6+siHLtuW6VDnxm07GoT
Ogjv5G0PqBw2A9fG98rthAP3F/UFjZuh+Z1P9T3Cbns1/3srQkHL4rt+9YQd
TY4mm0tT4LxlaMc1wtTZef0yBQr6v1JTqgibxXVc8tWlYG2XdG8l4TURQUUv
PSnwPr6YvYwwu9+JHZ3HKLj+LCQwh/CCFLvC2tMUGK6+uSKL8GxfyGB2JQX2
HolvMwj/WG/gbtdAQZhTTWoq4deOT03uv6ZgJjhKI5HwCz6jKbkPFKzxmdPY
Q7invaw65SsFu/92G+4m/MA6QpEyT4GNVr9/NOFXpezcA4sBvtszS8MIv/yr
v51fFNi8e/P6EMLPfELvGUsAx6uWlAQT7pbsSTouC1xJe222nXBr0cmfGzQB
58X5z/0IX2MY9fe4AQov5nTdCW8rFuS45QkYGlb9ciUsXPFW7ZQ3EDpLrXch
6303a1/kNuD35UE7J8Kqv18p80cBHgEZFXaE+1muuv+KBVjt3bKphLMEUpNf
7SGerw+JsiU8qrjmSUUK0Kpv4GhN+OzGxHjrQ0R+7bna5oTdA51Pqx4GpGpm
9ECYLVq+Q+QYUC5naEYhvCXn0Yq3ZYDb69kNpoSlm6Xa9lYB49GLrhsSLlS4
vfRGF7DSckpMm7Cl5kHKyaeA6X4RVy3C46YBO/a/AI4YKTM0Cbts4G/0eAOI
Rkou0SDMn+UT8PMb8EF92mAt4YYiDcbLcWD41YMDqoRDzrDfaJ4ENmRZDKwh
1+f2JT7GPGAUwp2jQjjt+1yNiqA5Dnre41IirD3X/XqJsDlEnZrDVhN+y13O
ObPUHCs1RXsVCUPO0bttuTm2rT1xYRXhOY8TrAFrzbGlTz5SnnDMLVOXE+vM
8YkS7ruCcJ13G1ufizkide/1yRCenHWpE11vji4xCy/Se4wDJHN8zRFUU7Jp
OeG9t7PeJ0SYY3L4WoIU4WYf0SP1UeZweOTJRZrl7wm78ThzeE71HZYkvM+0
+soOmjlY64JvLCOc0fQi3uugOcq3jQhLkO/rt3VNYaE5/JKfXBYnzLvweaDr
qDnqTgXak86hzFvYnjLHvHd0phjhg3cUBPRqzBH+ykN8KeHj93adEuk1B7XS
JkGY3C/b/rg7vzRH94lLqqSlF6VzZr82h1C719ASwqWWR0PZPphD+XekA+kz
95t0f06Y4+8rQQ0hwu8DqKOqs+aIfSg1tpiwIkfP8eB5ov7rbC+QrrD+sPCG
0wLyeiOKpC+18j3sFLfA7OsbaoKEvwYeTuKVtsCdk+q/BAirca1Qt5G1wBfn
EzdIV9tqFTYqWYCXb50N6foHXn6XDC3wQ+l4GD9Zz4fl4wc2WWBiQu4tL+Ea
ie5dyZstYH5n53XSZwNnf+z0t4CrUVAu6Sw25+8bQi3QU2NpTNrDaPrLqkQL
fB7dWcpD2DZTLnQZzQKNcTfjSRs9X/eZP9UCKvMF7qRXRJ0a/ZVlAamiKV7S
ny/Yf7h73AIf7a3p3OT5MhUTUFdqAbO/n/xId1mffFdx2gKio0vMSNcO/xrO
q7SAG9f7v1yEactODPreskB5h28qadED31/M9BH14OA9y0mY88WyDV8HLLDV
elEW6RkFq+dDwxaQDt+6k/TgnaO9bZ8sMEqxNSN9Ydr8yeEZCyyiFw5ykOe9
TZjLgb/E7+cebCPNKCzqSmK1ROSyj1WkYzS+PPbnsURKXGkaabPgwoeayyzx
5OkSDdKa9U12q5Zb4t3mRinSCuyfHkistIQKy00u0jxlpm0LSpbYRi0eYifc
+2Lkv8cGluBJGDlMeoetYeMOL0uwaKYLkP6mtKyl2scSGgFOc4sIR/HOdMxs
scTA+y1fSCc9vvH6wA5LHLD1fUj6oLvB3IUES7AOFWSTXqorwT6+1xILHRlJ
pI+LTfMZpVpCeaYhnPSZvutSD7Mt8TxjyIV0/WZ9488llph48XMZaWNzcUut
U5ZY5/MfP+k7clP2CeVEvh8eLbARbv9Q7817xRJ1qrQR0q9D9RJUmi3Rd827
njRbvO7NkGFLmByz2Uw6Y+PSuzUfLPFLU3s9aX7jiQeznywhGO3gQHrpfO3L
rHFLxInP6ZNWStOZrlxkBcNndiKkL28XZfnFZQUZy728pLVsf3MZ81thl9sL
VtImvLXij0StYLFj4gcrYeeD2vpfVlnhCltvN+neXSIUbRUrKHDJtpP2cv9l
k6hmhQe9OXdJbxO75smnb4X4N601pONKtOLWUK1wwvRqEemSCs260BArfIn9
4E/6QZ//g5MRVphgrPAj/Zu3qP9plBXY+nd5kXYIn2U1SbTCpTAfR9Kzmv85
8edYwXWzsQFpRf+JrThohew2JW3SboWrY2MKrTAkukaNdOVkdvHrEisEGIYr
kN7Y4DF66bIVbp15s4R02tj+P0PVVjitFiZAumr5TcGl9VZodufjIc1NX66b
3GSFVbZ0FtI3rEZSHLuskNRh8oOFsFjnbqlvP6zwXaO5h7TFwgU1uQkrCIi7
dZGO0Hht7jljBeWh8UekW/OJKxurNarCfFtIx27gqWMIWyO04skN0mWZxg/u
iVlj8E1nHemOm+H9k5LWYDnxsoa0gnQP62Z5a5yfEbpMunfouJO6jjW+xQqd
Js0i/Hirv4E1KKLhJ0mrWi7EHDGxxvdXvSWkU8v9ixesrNGm1XKEtFaI6mjX
ems0WCswSB/61Ziyc7c1xvZeSWLm33Nwq0+iNXQm2hNIr6v2N6fSrBHZNBZP
mjOSh1U2wxqJn2xjSSd99qB3FVlDjsUtgvTG9tVbGo5bQzusPIy0XsUs5Xyp
NWpDFkJI/9xetrD3nDWam1qDSAcOf9mrVm8NrZVlW0lb3Wnyk7xlja97V20h
vfLkITPOJmvkX6nyI/3aR39+oMUam+RfbiLt+nJfcu4zawg2BXuSNulaljT2
m8jn4N51pJddGdv0cpp43z5PB9KTOc3G9+eskVejbU+62n77n2J2G9x+OGtL
WrG1KsFB1Aarz9y2JM1enuqtL2GDfTHXLUgPp3oayUvb4KFNvTnpEvO5mVl5
G0yfa6aQXtJou6dS2wb3/ReMSX8rltxYpG+DOHsJpjsSvhrsM7ZB2xkdI9L7
DQqmN1raQDZotwHpuWuDu3ncbVBmJq9LeqQyNi44ygaW5/nUSXsunx+siLPB
ud82aqRb8vbbfkqwwfKi9LWkz8YckQhJtUF3Ib8q6W1mN2+FFtpgppGiTLqn
ylz+0lEbVI8WKJE2l3+YPVZig5yRz6tJy3L3+4SX20BT6pQi6cEnc/MR9Tb4
flZVgbSTVXrQ1Vs22Fl+WJ50Y71A9/cmGyhMszBdUixzamebDcrdB1eS9t4O
y6iXNni0omYF6WfTqRmxszY4rFknxVzvUP4fdfNE/BNmTNcOFHpNstmikvOh
JOn8e+XKu/lsEXV1ZBlpl5y2R/HStuiK0ZMgfWfeWeemrC1OvOsUJ62+62XJ
jIIt7gjsYFrQ81N4wlpbSESfFmPWfwWfUJKZLeqLlZYy90t+QfxtC1u0zD8W
JX2RXXp4zsYWnv0xTGd9Uq1JdraFyFCrCGnqNScP2hZbHNVMFCZ93yb/6L59
tsj9IiNE+kNgw+OE/bb4mjawmNkvGe/ZorNska5+gmlqm164f74tJCtWMN1h
229uddoWPHUagqS/BrHvNjlnC6/AKQFm/plrL+lU2sKbu5lplwc0sVU1ttAT
dGX6KVXhC8c9WyRepfGT/h3sKDvfYovCGEemRQ/ErZ9st8VrHmmmPdsfNI88
sUVtYQMf6Vd24YVtw7ZovLmI6bf29aYHWKmorKnlIb0o9E1UCgcVK7JymVbI
5q7Yw0NFxnAg04GPvIVDllChJiTF9GeHhRH7lVQ8DzvATZovTEnachUVA5aB
TKvmuLoaK1Px4rgl0xEdZxrWaFJx6sECF+nxddSD/OZUHJTfy7RI+K4Wdmsq
lGf9mNbJPT47R6WizgVMxz0eC/jqQsWZZHamZx0PGXZuoaLveT4naVbnV2/z
6FRU7W/jIH1Q7Ym/VyYVhwuOMy0r+OC97EEqfHIimcbjupHqk1SU+skw3X3p
UlDCeSpiA6bYSW/JOTNqcZWKtsgnTNMdDn1+2kTEK8pkWmhNZmhJKxXHa7Yz
XcZLGwvopOLZU0um77SHfZsYoKJBcRHTLFTquPhfKqwEGYuY+a2mRA+x26Fv
fTTTslx6vyv47TB6eiPTaJWfNJS2Q6yjMtN0q4WZTcZ2qNd5ysaMt+jrnzF7
O7Suv8j0nXuv/iZ728FrSzrTLOb1rGV77PBXk8J0sFOCYmqWHSrcpZl+ssnM
IbDYDmF1f1hJn45rLVRttEOc/l2medOybi7utAPb7XNMRx9yGhwftAPPvlym
rS49X32TxR7pPX5ML23z20WTs8cXJV2mR4ZHbllb2cMwXYjp63MR7PyB9sQ9
4wcL6UzxKceeDHssLn7KtIWS8MX+Vnuo6Z9jes5gLfcHDgcMCacyXW9H3f7N
ygHfhwOZ3untf28q1QFiyq5MK31zKCjmXwe7PRpMD6foBFAOr0P+KzGmE3iD
TgZIOaLGYH5hgUL0S8GxVwdOOeJM5CemB54MX6iQcYJi5Gumzwmp7GkrdsIN
r5dM195V2Lxb3hkdUsNM341aYb36ojNce78wvTB2ZPOoqAtmWL8xXSpbJm3q
4YKJt//Grzg9ZrjluyC2dpTpxqRZluBuF/RGf2T6+zv6fIuIK9Tv/5u/0oFr
Tn6DK2L6fjEdknv0v/nDrogYnPqXT5dydl+vK7yjZ5iWdRAdnJNwg9PFf85p
ndeQ9XXDwKV/Flr+2/FOiRtx/swyXRD9KWTLazfceTLHdOb9RaZ3Jd0hYvuv
PklLZRbLbXTHGtUFpvNPHgp7VOKON6f/+YIyx8OYIXcsrf/nl4zUn8dXeGAP
4585f7Muu+vngeuO/+yZ3/dI/YwHigX++bxG9d7Sjx44Nf0vXnD75ZHHKuuR
qfVvXHlbpdPf8PUYzvlntufV9AuX1mOs5Z/77W7WrP+yHgpf/vn55LKd9uqe
CGdnYa53z5mEtZRoT/Qv/ecPa0Zqq2o8sUrxn6evuZrIjXtC0fSfk/Texnto
bICJ7z8v3Iiq2x+xAcpR/1we45PMWrMBaxL+2UHDxjppYgNW7v5nnjajF9E6
XtCK+Oc2X/UdodFeYPX/ZyMul6q6m17Q8/rnK1U7iYX0wqz7P/8P+KUlPg==

          "]]}, Annotation[#, "Charting`Private`Tag$2407#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
E75RUJVp/soQgrvVpI0IF2WFvFxsMgTHhZV22wl/jGpiPzJiiAueRX9TCHuE
yFzaPGWIS5e5vK4R7t8Xo6i2aIhxH47U+4Sn3RScfy03gl+isPtbwmt1T17y
UjZC8YG0zCnCnhPGSo5BRjh80C7S2ZiO5XxMLR9DjdDSqPVhB+EytdeHd8Qa
4c+d5Qt+hAUOWD73TzbC4NaCNzGEawccbY8XGiH5fJzGXcJHOFaPcD0zgnPu
G4lCwpKyH86nVBL5Nmr9eEY4xsf109VWI/Bv8pxuIKz2Zbf/00kjnG6cNh4j
3DUvwUtZMILstvDRWcKJ63ofvmUzRjvLBhqLCR29bv7TrULGWFa3TZmfcOaH
gyeH9Yzh17BvSIMwU13cbclYY3R5ngsKIlzww9w694QxWkuDhA4TdmdnH1JN
NobRrRW3Iwk/Nk/UNL5ujMkzJ4JOEvYvT33tWmmM43fiX10jLNi11e9LnTHs
ZivTbxN+/VeIe0+rMQ73BWzKIyyqf2VTyHdj+B6LPFZCuOXRre4kNhNYPvza
WE84tnVPPP8KEyTfbR5oJqwwtlHuspAJdJQ3jHwkHK+SH5yz0QSyvS7PvhDW
y328WGljgn2Xw3eOEc6+9lZ0+qwJUlUPreen0JG1U6l9W4YJlPNSJoUIZ65N
O//4mglSqp4+X0s4OcOTPeShCQT26a+TJByV/Pf3UIsJ2O4dlVUjfMTeO8/u
kwmaS+1OaBI+yF3nm9djgrm769p0CPudzPi0d9wEZqK3HI0Jb6apv/nGT4HR
qEm2DWEHo8xYU1EKiq9vyLAnbD23qHtDmgJZvic0J8ImYQ35HtoUfFT7rriN
sOKBvRkdLhTk7Bn9u5sw666r+5ouUWCrcOHSYcJL61illW9SUNth2X2E8Nyn
gC9n8ih4cj9+fQTh0W16W2yeU3ChyCEmhvBnhw9GVZ8p4Lx4tjmecDuPwbRk
HwVtt5Y1nyTcWnejKG6YgkQW1eoEwrUWB2QpixQ8b5TOSiL83zVWzq6VwJQ5
+880wh0Lunt4BYCbCTfyLhD+387A14bCwF6nEZ+LhFvWtsZcFge2REtVXiZc
nXF9zFUdKB7dL59N+FGyQWfrZqBLbll9PmHvKyvYylyA2mon3geE+e59U8l2
BzLYntg8JPtdmXgs2BtYvlmitIiw0uR/8rwhQMGVCNdSwp1MD7dMHAGYSgtC
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
+f/8f2CIETY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2407#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Count\"", TraditionalForm], None}, {
        FormBox["\"Time (Days)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 99.99999795918367}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"S\"", "\"I\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6938472904990053`*^9, 3.693847344828656*^9}, {
   3.693847575889475*^9, 3.6938476160936527`*^9}, {3.6938478389750023`*^9, 
   3.693847854232547*^9}, 3.693861063036121*^9, 3.693878939627737*^9, {
   3.6938796441431026`*^9, 3.693879666877481*^9}}]
}, Open  ]],

Cell["\<\
It is possible to reduce the SIS model to a logistic equation because N is \
fixed.\
\>", "Text",
 CellChangeTimes->{{3.69384735747713*^9, 3.693847366317062*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", ",", "K"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", " ", "1000"}], "-", "\[Alpha]"}], ",", 
     FractionBox["r", "\[Beta]"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SISlogistic", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"r", " ", 
       RowBox[{"i", "[", "t", "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"i", "[", "t", "]"}], "K"]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "\[Equal]", "1"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SISlogisticSoln", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"SISlogistic", ",", 
     RowBox[{"{", "i", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6938473961476603`*^9, 3.693847510159264*^9}, {
  3.693848794718251*^9, 3.693848795007441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", "[", "t", "]"}], "/.", "SISlogisticSoln"}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<I\>\"", "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (Days)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.693847517319667*^9, 3.693847552521433*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1Xk4Fm+4B3A7kcguS7bsWV87vd9CSZElUpKiQqkooVC2bC8qJJWlfomU
ok1RKVIi2kgiSxKS7FvWM/Nyzvln5vpcc8/cy/PMjLTbEbt9TAwMDBLEgTzL
nJ29nilZtqY+73QfI8Mg9TGH0spDnlnUmI12phFHB6llgXezFT0LqPWXTvHp
9QxS32j4erB5vqBK8w0xJbUMUd/Gf7YY8/hA7efY7fZseIQ6GLm0O/DWJ+pA
1OQdv7BRasirAqWJq3XUAbfNdxQFxqipGL87kvCV2rFkOGHMfJxaZRhR3OfR
RlVX4Qr1aZ2k3jbmP6VT0E49/ObaCatz/6hDzXuz/G79oD7UlBGU2jBFPbWC
o2P46k/qbV6jKkrFNPXiRWuPgYRuqmhlZgmFYZ7aqns1Ri22h9pXe6a5rmWe
KtcwlHco8je19LkI9eNuBhQKXOj7c/IP9Uv26d161oyoPt/s2+MxQHWPX1Y4
b8uMmLTUqmTNQSp1sKaW8zszVD2pO7QLBqlnXn+/+teLBUfZzwcdvTVEHeSN
PpNznhVz5pTSwasjVIMrhRH8Ahy4JthifU5ylCpqVTM7/4IDZr/OtKmnj1Lf
P9b0e+CzBLTIrwxHLo5Rgynu+ybaOSHy6qTp34QJqqnpN9kOhmV4miRbH881
Sc0Gq1V/wzLscqvZqxo7SS1yjVjWe58H2YySUQcj/1FrtpYU3SnlhSbK3v4+
OU0VezBreqqQD/U8B7bHTk5TE6ryQgt0+BHYxter6D9DNYtklDlXyo/SU3u5
PH1nqcukv9992ywAy+fs1l0e89R8o/J7KzYIQ3PebUxocJ4qnK3W3DsljHgp
1/eyxgxQYlzFsvKhCPzcSo5vrWBAUvfEU3u9FfBk9qzy5mDEuZwPHrcYxbAz
W1DizGZGoKPnMM9nMZh1+VQ8qmfE7C515ydnJKAfLSnyXoQJI7OVBc5eklBV
rDnYtZMJXcmTLe/sV4L/gAK/8C8mWE7MevRnSqHjb8uewDFmbPpdVLK9SAYN
ibRH5wxY0OQmY229XhbV6gZL8kJY8Lru44G4Jlnc900p/MbKinDGr5LbeVch
bMxy3lCIDV0mzmdmHirAL3XSzn4HG9ZnjeQ0HlCEp15OzsFMNoT89o3hk1eC
zQlG63R5duhcR83aO8qQmn2cPqvLga2sPiYqzGoQyNw3KBjEAYGE9KXxPWrg
oPKbqRHr3H7j3LvcenUMhB7+s2vDEoymXhnpaddAKcsqw5fbONFo9uJo2ZQW
7t/4nNB4hRMvX1j2ydG0kbM+9MdgGyd0vDvMildSkBjTHCPtyYVRCYXUfgcd
uCxN+hoeuBT5xdXUkX96sLlDVbnybCle6RspWRbow8z676kHDNyoTWdWqPcy
gOo5C/nOGG6UyE/P8A0YYoZ/3s/80jJc8mFsdVmzBoMP89+6tCyD1ra+5oPS
VHQ67BD3l+ZBq+a1AV9W4N3FR69y8nhwRunO8ZZJoJZbdwmLCy+emnzbM7nE
FJ838aW9D+bFpHSRJX+iKRpj++UvpfNC79mgeZqgGTpZc83UvvOic71ek4a6
OWZmhUOdnJejy2C6pDdxA5iMR5fJBi1HxJrx0kwNC3Cc/Jjx9/JylGekKHs2
WIB/POZpeNNy+I/v25yqZgnl/n/j+dv5sIf3gsA4vxU0VBvOBJzgg7O177au
RivoHrgvsO4SHx5SGr1v/2eNdV0HtL428mHblKJqvIwNtrc2H2J04sfluJMZ
8p222CX+ZOZdAD9KqoemtjnbYe+OFFrqRX7MWagYOH+xg0/D5jyVr/yo/GTn
s/SzPWLeP+90cBRAbduahHMDDkhcevmYlL8Anv47X/bmlCNSLP2Z/lwQgH8e
w32D5duQ9UZNKvSLAP7wbH/HCScUlWY539oqiH7bv4+q3uzAs5mgXj8/QTz4
svfNVl9nlBs6naCmCOKkdYlE5MqdeF/Ee7G+ThABVB1thmgX/Lob9nnOTgh9
yUx+jWt3o7fPZU/VUSH892TJGruc3RhUNhxMThLCp6xv1dVL92AmZ5hb6bMQ
6mye3HjXtgcCWe4b7W2F0eHyuzkq0x3rzpq/zN0igk8vVZxKwjwQavkw7/Nh
EfD/8vNTYfVEKats8myCCLK5N/sWxnnCMJhhv32NCBQET2eMXfGCttdTrnkL
UfR2eX82/3oQcqaa2xzXrUBPC4e47DYfuM1lIWzPCtwzvm7ffdMHV4uXKeeH
rsDTXK0dqdM+ENfom2F8sQIJX8b33LjuC0GJ3P/uGInBR6tRmmnuKNgmxPtZ
dMSRsHFrekXDcZjdp31V3yqOZWLntjyn+CP80NTLHcfE8WFd6giS/TH382ty
4T1xNMSmzlXZBmDiY5LBTjUJoM9o90RdIHpucZx5oCCJDzbJ3fOdQdinPsWt
yS0FhYF7h3bOhGJzc/QNEUkprNbvV96tHgZKtKAJg7oUaldHSS5zCwNLm4b3
Bxsp1F+M43Z4E4b/Ej2qD6VIgalofgNfXDja/tZH3RKTxshKru2/pyLw5pKb
ZJKqNHQ/BYXkyEfirvngoxMm0liWph5abxuJUxlcvyxcpRH6tNMzKCcS4lbr
TLv/k4aVk8WzCosz2J5fMC+rLIMh65K6PT5RgJPJRS4jGRxk4FZJTYqCIss7
tZFNMthy7NZetYdRmHTucik/JAPV2YHA+LEopHJJPNt9Twa/34dr8ftG49Tj
W/YW5TJwdTh790RiNPa56/9Rr5NBS2PiG8vb0aA8tV8xPyqDs6JsUZo/o1F3
IC4wQ18WfDz7JvQ3x6BESIT3zEZZHF9aenvFvhj8V34j13uHLOzXmZQeDYnB
0RVlDUbBsjjk8No0IT8GvNUTlKYXslBLYJDJYonF5PEzNWUfZXF98pq5h2gs
2qT59+b9kMXLuovvHq6Oxd0TasmBzHIo2XGwpXtrLKyU9g0JbZADo3oFQ1dG
LKZox5+2OMrh2NLQuf47sbjZf+ZM9n45BBw8xHLleSxYHuaIakXJYWotZ0FH
cyxK1vSstXoth2ubXxS7CMTB89okl8AXOcz/4rHOl46DIMuShqZOOUx+nXl5
Sy0OPlVKBzxZViGr+Jj/8w1xkN96MCnCdBWe1Wur7POPQ31R0E5L+1VI59x0
wSUsDmGi8fLL3Vfh9dmanuXxcfjeml+SGb4Klr/3rnh4NQ7JXv0dxWWrQHzc
KKyVcUDNXH7op1VoKmybYf4Yh341noANP1ZBy23ttarGOFiOqnN9YZBHcZKo
993fcWA47as9SJXHTtaUbQxLaLj7I2y2aIs8VL+mqDnx0uBsllQZ4iqPwhfn
vEKFaSha8sCZ67Q8hmV7A9avosE7ZTRCvlQe1Qm35CvX0LBigsX6b608xHQv
i700o6Fyu6DIwxZ5XFmZ9Pi8JQ0yK3Xz187KoyMquaLcgYZveQH1O40VIDOX
/vf4ARqilsZkym5WQFF8aYPVERooR9I8e50VoCqb5svqR8M5SvFMQJACbm1X
YxcOoWH9iym55BIF5L53pXxLoGFUmmtge7UCKpvYrSvO03AtUqxYqkkB01t6
mS5coGFmo7HV3X8KOBSYx9SbTsP9+pDjVfqKeD+aI+53i4abZ/a6dWxUxNqq
2o72OzRk6m7aMr1DEVMjsyGUezTEpYkorQ5RRMSjoJXJj2lw3/ng+7kyRfDy
Cq/BKxp2cF+uyvusiMQwFvfx1zTYlIYWlf9UxO/dnqfS3tJgLGV9bpRVCfci
1/T/V0uDQGePqZOlEhi/359rbaCB88IHDV9nJbQFJVQwf6OBYX2RRJy3Er6f
jM4WaaahLzdi4mmiEl538/gJtNHw+qDk7ZV1Smjn5fzm2kXDM3HWNP1OJZid
X6W3vIfor/ZPpO2YEjLDG/89+k30o168K0JYGS4b/7A199HgP2LP1+2sjLgu
5jvpw8R6ZhvOz3sT18UiLg2P0ODmIN0nckoZXkm80WvGaLB+3P/a8qoy9Ckp
p4onaDDz/HLf/Z4yIhyUBH9P0mAo+iwruFwZgjmcb3imaFAIij1xt1MZkhwq
8aYzNEiq+uyvHFNGoK+ZpO0s0X+Lo307mwpyV3BXOs4R/VLlVvMpqaD9Q/ra
TQzxaGR60X78kAo8RQu425jj8f7BjdrEUyq4PqPt94AlHhV740tyz6pgWcCh
y2Gs8bj3ZnvKt3sqaBtnbedij8fNAIQNl6vgX6vnzreEMxUVDnPVq+BI+qjt
aY54xMWNbjAZV0GC1er1LUviEWrUTHFkVwW3NdvZSM54+PeVSR8RUYVjin+P
PFc83KzPTl81VEXZMa89LkvjYcSnXMByWhXBbdVuF5YR9THuqKo9qwqHpKli
IZ547B6K/Zl6VRWyNm02KYQjP/4WVipXxZXbx25H8hLxiXmhVqyrUal9nNOE
j4g/9e2ykNBqJMjlWV4nPHxoyaM2+dV4m+iQzMYfD2Err9++Fqvx1bAguYLw
bi4lu1Taasgw386WEiTip5y8XdNX43lr8XFfwpG9MVGKd1aD7e/h/heE86p6
Skrer0aETryooxARH31Ttm25Gn6b6Ct5CRPxAY0mN2XUoM65my2PsJAHh5Ov
thp0J9Yt6SZstN4zntlBDXWTeOgiQsSzKI4ppKlBvhVceqJE/Og2nqGbaqA0
DYV6Eb75M1qppFgNdlvlQy8Tri3vdtncrIaHrVmmk2R8WO4bH0l1dPCETl1f
QcT7fG03UFeHTWXu13eEjXazTzNBHfkixgnDhHdTPdQv7FFHsofeNWMxop9Z
+bTibHW4WThvrCBs/NfxfvgjdUzdLH/zk/D771E1m96oY467aweTONHv0y6G
1m51lEuJtBsTljSpo4QJakC1XZfzJuFuyp+yXxIaiE1u+f2ScKEq8xZLeQ3U
yK9f/o3wOnFtL349DViqW29il4iHx3RSxg0nDVRGWAw7E06x7nt1YrcGBFiD
LQ8TfnnNvNfKUwPHVXNkQwmLWEzqjgdoQLfkyv7/CL9Ncfm4/qIGOPIlIn8Q
Hu0uGl+RpYHIpGfGg4SljHglBnI0wGMnfnaOcOCPcq+LRRp47MDCvUIyHkpq
isw9XzQwkX3lwWbCjmFhSs9aNJD6eSjCiXB4fdOWc780EDrOx7SXcNPJhHT9
MQ3kOq9afpJwXOWwTqyAJpLknIv+I1y0YvNOF3FNbE/30Mwn3HHoRrimnCbY
hQ8deETYUMDpwzdtTdzY+EyikvCf3c89le018Umvr6SbsMhDobNzOzSx8sIl
xwHCZuw+jz67aaK5edPzccLpd2SYgo5qosMpcIhlZTw2T0VfeXeesPsV8ZWE
A61+lGVd0oRZRpTeKsLZVw17jl3ThEvspIIK4Zn1fyni9zTBF/wrQZfwnWS7
994fNbHvi0DCJsJNXbdH0UjkKzA+ZkOYzZBVTLBdE9UXPfQcCO9qf+zxfEAT
PUIqLrsIL1stwbiMRwv/whR1jxA2DPVX6BDSwtJARbljhPfXfbAqktRC1/7R
cX/CpSfCL+9S04JByi+rU4SPvOnWLrDSwgSzaB2N8EvkH1R11AJf+F6Ts4R5
n/pcz9ulhZtq/QlJhAsL/vFlH9HCvZmZzjTCDMqlltKBWsjYKPj3CmHb7PDw
zFAt5DQdbM0kPJzGNZx2Xov4n5qdzia8jv+jktBlLTR6zqnnEk5OSNmT/J8W
pM961OQRpoRLfEp4oIXxqMfVdwn7H1QvDP+ihREehv7HhN/8Gumeb9FCYf35
pSWEhXc/WRnSpYUAVQWxZ4SfbF17NmBCC1WKapwvCXN8YK0cndeC3MWYP2WE
nTZWz/lyaENV9UnpK8L/TOwPe4tq43Ouh3ElYcsnwjm/pbVxkPtZ91vCl7W+
t+xX1oarYGRUNTlfhX1We4y08TH9XVYt4WDeAFVHF20ohLy0rCNcE2e0t26f
Nrp6DK7UE5ZgZUi3OawN9bWtP76Q8/8Xw7XptDbqdB/aNZLr52dl+jZaG5cl
PEK+EXbtXx5kfk4b13dvymoi5/vzci/1mjZs9fOrvhO2cXGVeZ6nDbc/tz63
EL72VXaH4X1tJOi11bWS863Jr6K80objxt4X7YQjHpXeVPqljYaMjWadhOvV
I9pz/mrj9D52wV+E5W5tEJEb10ap+OU20hWZH6Ml2Sl4yjvr1k1YQPTCiys8
FDTeVBXvIbwvefuEiAgFFt0DH0izxXTs51eioFitR6GXsCNTbuY5TQoKxNxr
SOcGH2zgNqRg3U0O7z+ELXxHzTk2UbCFuj2jj3DcDrZVs94UxJU+ftdPeI3G
0vHffhTsMnpgNkB4iJWvsiGYgmOWriWkne5JeBXGU3A1SSN9kPAqDp077vkU
eEs1GA0TbmwxPGXzkILrNgXppOMfYIvJMwqoF5qnSA/v2jwkVEPBR/6TBSPk
fn/krlP9hwI/ve7pUcJ+NC+2xyMUxG45sHGMsMKeI1+vT1MwW1+TQjpxadCJ
EC4d1NL2rxon7Oye9FxDRQcX3L3UJ8j1NEhLlNDWgcq1vYdIly/LdOU00sEj
/vw80ooleYydljo4NO0gMUl4nLfM/OIBHZwMtxomfavrjVDkUR38YBmQ/UfY
5VlNt89JHWjUaG4lXeHRGGsZpwMx7bJC0udLB2pn83RgcWO58xRhs5SxzN57
OmBzrwwnPek1feRrsQ5kYz3ySO8SZOe7V6UDU5awEdKq3pKOe3/rIL23Pmia
cPtaOQXbIR2EjF+8QjpZWHnS5J8OaD9OlpCeKte5LLxEF9L6T8dIvxW1aq1W
1MX0f1/cZsj3YcCu4LGGLsI2mgWTVn/tFJqtr4vXDvMppFN99sqcstCFO9uh
CtLulUH7NT11UXcxV2yW8F5jeevxI7rw23BBnfT+ex91ngbowiP73zrSnldW
sZpH6+LMMz1P0oePfLjulKOLZLeZfNI+nSdoEnd1satp2XPSvtvljnU80kUF
7UENaT/TE+u8X+vCeuPzXtInhWV/nO7UxZNBQZk5sv742rdmfUT8+Kwa6RDG
wMIlo7qgJtGMSIf+qTmdzKwHb71r9qSjXvhL5sro4dL9udOkYyjSbN7KevDb
4xxHOjbv3V8NLT0Mr/BNIR2fLPW8ZK0eBDtrc0kneVQ7v9+th7uWge9Ip3z3
M0321IND9ds60hdsV6o4+ehBvKy1mXSakd/Uj9N62GC55w/pTB7JS2OZehDb
188+T/hq5NvQkhw9dP5LW0b62r+jnqfv6oGFQ0iQdPbPSr0lpUT9pTRp0rce
+zaIt+ihpiFcn3S+qnjpj049rDnRakL6zrU3N3L69GA1JGBKupAmdlxjRg97
zglZkS5yfc1vJqaPTt04V9JP6o9Mc8jqw+10kzvp4o0rftYqE27g9iT9TPvI
/W2G+igUkvIhXcYuantwuz6UC5lPk+66rmb5bY8+pkoqw0kvhZnphgOEvY5E
kXYKPKIjG6SPutfeCaRPCZxROx+hD7vpV+fo/RVeVpin6WNTF2MK6YGe16LN
6fpg0dW5TFrgTDPfxhv62LVVNYO0ofQQ1+M7+jhqwH2VdNR28bmkUn20pyXe
IC1RfbTDsl0f4X5ZBaTX7Y9pftKjD6dzo/dIezJl1ssP6UN0TO8h6YeGVW+Y
mAxwvIn2hHRTQ+sLH04DZARllJBmODb6pJXPAFU5Wc9Ib7q98naJrAHMvge8
JO2zQSdbUdUA0uxbykmn/rTMSKUYwP6xSAXpDjH/s0fNDfBrJLyS9In4mmPK
HgYYyyitJZ2p2OGddsQAN6kaH0hXVEzsYws0QCTnxY+keWdlnDpiDBDQbF5H
OvfQCePLtwyQf5PSSLpmyVkdjgcGmP3k/I308I1sNf+nBpi7HtREek3rBym7
GgO4zeV8J/3FWp6Vs98AE7I32klP9RrNBYwbQFI06QdpqWjbiV9zBojlCewg
7f0i+HcZjyEK29Q7STNr1NWe0DTEkJJDN2nFmp433QaG6DDn7SFt7Tn3wmGd
IeRk3tB9+arSfU17Q0hOy/SS1lwemvrbzxC5lJw+0iUcXxUrgw1Bydb8S18v
BrWn2ZGGaOYrpnvrQHOba4ohMhyf9ZP2r9VTanhgCAGni4Ok5ysSnz54agja
VdYh0jHPflmdf2UI7xIfui/dTj66uc4Ql9+ZDNP3c+zA0/JhQxSbFo2QNg9b
b311yhA5E9yjpN8HZrSHMBlhyxZ3uts8NrEa8BnhxUv2MdJM63OtCzSNYF9t
ME6aZjLXHm9gBGZaGN0COg7HDqw1QubeSrpXyTGnrbI1Qoqb1QRpCybXH1d8
jBAeu26S9Kd/j46dCDRC7PIguncMLWXbFmqEk/fv0X2wvUSZ75wRJKmi/0gn
lgr5xRQYYe3IJ7qFiw6x7X9shAeXZui+eqcizfSFEewgP0X6XvrR53PvjSCY
6E93/cn3bMf7jXBfhWuatMvRVZfsxon8davp7vIKVtGYM0J80Ba6J5yUbf5w
G0O45izdoTZhHW8FjXHV7y7dHBaNfjkSxnCQqKF7hV7UpT2rjWF+hGWG9HW1
FhWqjjFCRVbSrSpPKRU3MUZ3mT7dJoIdHV83GyNf2Ivu3SMmqtbexsjwKKeb
m4/hY72fMfbafqO7RKP8mHOIMdzvDtAtcHj9U89EY7CXr5ilf5/iOVwHUo1x
J1Cd7sO3q5n8s4xB+8+U7rc91pYRhcb4u+UA3cfZl/cvKTaGb10w3TLydefP
lRlDrTqR7mD3bd8yPhvDavk9ujVaXT2fjBojWGCA7jixzoLXrCaIPs81R7rT
yXPis5AJZj7J051W5xP1V98EMhnb6R7mHaud2miCOgVfujdbnxDkcDZB//Fo
uhmqwrJlQkywZ2ch3TvY2PrUE03wZLSc7oemcdomWSYI8a2n27M0qXxbmQlK
lo3RLW5wxfboTxOIneObJ/3xwfX2eNY1yBpTpTtSLf9IrsIarKea0a2f93Cu
bOMacF93ortP9nnC94NrcJ/3IN3XMl+LTySswbvsILpPJk4P9H1cA+mPqXTb
ndJ81cFPRSJnPt0qhz1SGx2pkMNzull2ZXi9v0TFi6vVdDdlsnC08AD7hFvp
fpBo2PzZDpBI/Ut3itwzwScfAMOuJQwMUsT/v8TEJmPzWoQck6D7crnvNf76
tdhVvuAX1TeGY53XIV10Gd0CsQNf/31bh+xKbrq9Nhg893IyxWj6crqZAnWK
D/wwxX3qwvX0m5qPDh4wQxiVlW6h9wFi/YNmYL3DTPf5kedhPgHmWPN1wcYf
RIP7Rs1xZikT3V23jvt7Hl2PJjUGur9MRkQfn1qP9pk5ej8V65PSwsM3YE3w
gjssi0xiGS0gG7Jgxi1NHWdDLTBdu2AGC4th4VkLCFnML3htEePVExtxuHrB
ZvkNCsUMlrhpsJAvRnjC6nO0JeC64Bn91Ry/WDfhleqCfXa4l09EbMKF+YX7
Ffs3JV9Zuhm+Pxf8I4yyl3phM9IaF3yS0yNrr5gVDjUtWCD5UlPsNSvs7Fxw
y6cfeTclraE+tOAcXuUTlVes0Tu74Idlcq4BsluQzr6Qv+zoSnOF21tQzrHg
+b6Lrj0CNphmWnCm1FVxk602YFms7651baJdkg0aZxb8PHiKwfOjDZYseuBn
6NxrfltsWbT0JvYZ2W222LmY/0BC2qu5C7bIm1us54MS7Vu9Lf4sPl9qk0Dr
jIgdPjMs5I9/M6ch5WKHT4vmlRi1epluB5NFJx/7fWD3dzu0LN4fU8FsUrbC
HrcWHSwoySOz3R6XFp2Udd77Xbo9shedp8Ra7dduj7JFNyZGDF1euRUdi2Yb
ZRQt27UVTIv5HJO+vVO/vhVCi87VuHcqs3sr+BbtWXWnq1bZAcyLVnK7ZT17
yAFTi89jargXmpfvgLFFN28svu/wxwEji24YF/WxVHfE8KI/Xz+5mnrs//1L
peth4X1HDC168oGtscywI/r/t1/djsCtGtv+b57zT44+ijq8Db2LvuG3M4Tx
/v97k8Z68+Cxbehb9JJKw6/HKE4YWHSli7rXwWNO/5ffkN2m8FGxE0b/dz8U
+kzMzzthfNH/A9cVf1c=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2993#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Count\"", TraditionalForm], None}, {
        FormBox["\"Time (Days)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 99.99999795918367}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"I\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.693847525855402*^9, 3.693847553887815*^9}, 
   3.693847623390222*^9, 3.6938478600536747`*^9, 3.693861066126678*^9, 
   3.693879689617535*^9}]
}, Open  ]],

Cell["\<\
Solutions to the logistic equation always converge to the endemic equilibrium\
\
\>", "Text",
 CellChangeTimes->{{3.693848447454773*^9, 3.693848458716251*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"logisticEquilibrium", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"i0", ",", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"r", " ", 
             RowBox[{"i", "[", "t", "]"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"i", "[", "t", "]"}], "K"]}], ")"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"i", "[", "0", "]"}], "\[Equal]", "i0"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"{", "i", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "50", ",", "800", ",", "1000", ",", "1500"}], "}"}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.693848578528695*^9, 3.693848615666768*^9}, {
  3.693848715424633*^9, 3.693848723442951*^9}, {3.693848968806286*^9, 
  3.69384897261765*^9}, {3.693850004396536*^9, 3.693850004779327*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "t", "]"}], "&"}], "/@", 
   RowBox[{"logisticEquilibrium", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "//", "\n", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6938499842540417`*^9, 3.693850024186862*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk4VV8XB3Bz5nmehWvmDgmR81WakDIPISEUKUqpVMpwb6IkIY2KEikq
lZSQMktRvwyNhiJllmvIe96/zvN5nvOsvfda66x9NAJ2O2/n4uDgmObk4Pj/
8/LRAD5a0EVr1myyBwfHKFHbru7goX6Q8Hr8TE5depRYfF0Zr65+khDX/Cfl
pTtKXK5KVeNVv0B0WpVukXMaJcJXRu/6q3abcB48XVF/Y5RonwvNGFUrJ+jt
WX5KjmPEku7vOr/VGoiFc0eawh+PEx+rnkcP/2wg+I6+/zTVOk4U3sx++au0
kahJjjxyaWCccIxy3Dq0upmg2nXPrJKdIDIFnmb+CHlDtClaTM7snyAkL9Vz
jf33jpAXb1inbz1J5DZejfyl1km8+yZIPO6bIiazy/S/pHQSfY5fjp3hmibW
hjT1vmN3EtaJ6lvT1KeJYe6/bk/bu4hLh6+9E/adJsxXOq44yewhLneUJE//
N0203Zvn0hn5Qrgfktr64v1f4lijoR1tay/xQuq3c+04mygofUwpOt9LhHuF
PlKXnSXeZa/i1m7uJb7nuVCLLWYJrRDPZ/IWfYRvdvEej+OzRCN3gjGHVD+x
sPg+cEZyjpBd2S355vUAkfPlduhNYp64e+9kd7jxEPHHLq7xYtU/YkhyKMVu
2xDx3VXo7OMf/wid/XbWuhlDhJCZwjyP2CJxzUoot5c9RLCUQ56b+i0S6Q0p
wd6vfhF82RE9U/8Wif29Z8bW+fwmRv+7ziOdz4GrQk3xEmtGiZDp39Vnebhg
vfKwT5zfKKG2ScHtoBIXeiIMTEcOjBIdZ4ZGj9C5IP/u1EBz4SghyDrQ9tmf
C2ezHTawxMcIs9UxCtwvuBCv3Sq62D1GlNZNbv0bx40Q4u2F4agJYteoVkWu
Mi84rk8/7T41QSxkN5T9Xs6LbB7lnsa8CaLfy8TT24kX9Q3Bqrc/TBBf+i6Y
ZSbxQtd1/vr2FZOEm/+uj5fGefEzVOfOZ84pIsomyU/gLR92ph+pbEubJgSV
L91OLuAH19T1Ly9uTxO29q5YWcePHI96jns108SlIna/zAA/GpWlVqdOThOu
u49LrtASgMGtgroNnn+Jess6QZfrAhiuaG+rUZshFA2CWsfzBRHRr9f78C6b
eNy0ImxdszC++nXyVzewiYSDmtmUCWG4fGQZt/SxidG9WTwrFEVg3vTjYL/i
LLGGd+zhv1ARcJfmi8syZ4mz2fIaSwREkR2rYX1g6xxRuGFJiZOLGKqlFC5Y
iC8Q2Y9np8IEJLAstb5yjcECsfxzr1GwugRu8sX0Oa1dIFYuUEyOmUkghf3B
ZGfsAuEW7GohGiwB9y8Zr3N+LhDxhKBefq0EhgrFJ+fIPnnd17GlhykJQY0E
nS/mHNDIU9p8TUca9VZnTY6u4cCOJ1TRv5BGkucVMxVnDnDdyNq/y1saXGlP
1m0J48AV8/f95anSmP03HPLfZQ40SoXkvJ+Sxq8et4I3XJxYNX/d2rJZBs3Z
OnpVzZygCagSn9LlkPxwGW1rJydw79HqmBI5rG+zsfjXzwn7416m5q1yqF3i
s8FqkRP5qYYZOoLyeLY/bccTGhduJIqbNMTLo9iVfbskkwvKP255EUcVcFq8
ST/XnxvWjCzvDWeVUG6mUuYYwY0d3V7bah8poc9vNzF/mBuPF/N+R/YowbJY
ytUjixuN1wNztusq4+cGnyMirdwQ6Q3wfVSjjNXxv98ctORBele5pQWnKmam
xKKdZXnBXyi+8ZuLOjRVAhYXNXkhbfuaLbhTHY62D08W03jhGXg20DlOHfnp
nlf4N/Li2J14KctidTib5NZVxpN92sgOjeHXQHEoXdFgjBczFmZCdbUaCOh2
fcHdzAfVWouoD26aELz4bVdkJx/ii5Sfp+7WxH3vCOUvA3wQztrVHnxSE9xd
zINPOZfAxMZW8thzTeR9fMqINFsCqc3UAgcdLQy8Vy/4fH0J9jb5lZzg1MbO
tuG08oP8eNlpvTzjLQWSaQcJHSY/7H+Ma/eMUPB0E9+fjAx+FP7TfGYvqgOh
N2r2e+7xo/RvfsF1ex3caXHm1ennh3TzK0XTeh38aXxyMGOzAHTqvXUVGnQR
+SohYLeOIKyUmb/W/tKHat9avmmGIJbUTpw7LmyAJi6BwlgIwvzK49N9RgbQ
RurYSS9BdBzfslIr0gCdT8/H5Z0SxFrj+y1n2AawKbl5pXNEECl+KSarJI0g
cbG+a/UTIbTqvenaEWSCyvLko421QrDjEasROWWCsI8OS53eCiG3mG/911IT
vJJ5u8NvSAhXq+35BDioOJjWOROjLIx9vxoJj01UfEsckr0bJ4xOrk83joxT
UbpH2EV+gwi0dyauLbOnozlH6mCxuwjObWtYLhJEx0Ct4tVVQSKQs/RtTIil
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
/f+unKCwFxcZ8H66+n446f8B/jxE2g==
       "]]},
     Annotation[#, "Charting`Private`Tag$2064#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2064#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbYdAxh0OrDffqT+Vv6kPYy/8NT8wtfy
N+H8des7b+fovYLz0+0vznxT9BnOz3uq+XjLup9wPpdii/p9CwYHGL9P4LTW
wgRmOD/pdsh+5jNscH7h0ZakfHUuOH9jAU+whCcvnL+wOvuVQbgAnN80/0/g
lzeCcD7D5QcOe6qE4Xy1krSKEC1ROP/J1+lh3HvF4Hyvp1m1kwol4Hy/JxO0
5eSk4PxXh5MaTqyVhvP1BK/JOsfLwvlc9l8T73yWg/Pd30Z9VwpVgPNvHEph
jNJRhPO3dhyJU/iK4Kexlj44d04Jzk8uqt7KM0sZztdP1z7nk6gC558X0uEu
tVSF83eva5qtw6wG51czagWcuYvgc92p8sjbog7nP12mOGV+jQacP0VDkmVn
qCacP2FW2vFEBS04P2pK7Dme5wj+D5elP+fv04bzHz91qjjUrgPnL7I1lD6b
qAvnr20tFUzX1YPz20OTvZm/IvimdxaubD+rD+fP0Jy99qy3AZxff6B3hvdO
BN9XOnTpKRVDON8x73i0YCeCP18mSeXMVwRf5fDyaX7RRgj/6R7SurQPwU/7
zHLxpJYxnJ+08ZNCZz+CP+EST++R4wj+vs9qP///R/ABV6jc5w==
       "]]},
     Annotation[#, "Charting`Private`Tag$2064#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
jQoc/IcZ/h+FcWSX
       "]]},
     Annotation[#, "Charting`Private`Tag$2064#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1vxWNGfKRIVT2/jImH/v9Z1s56WCyW9+dcwn57e8aVWhQovNIcLm+/RAv8te
lQoCQeKbtjke1v5LjQri42MqmA27mV8Lk6lAdrq8aaUipqrjWlTg4CzAYx53
Zshb3UeFqXJuZcwnetf98ceoQPy4oYDZnq57odqBCsxDPZs+DAHnzZ2o4CmW
s2n9R2tn/FyoMKpnsGmFiFXneg8qFNvEyG++L3uXTY9coALrLoIcZuenczL0
WCrE8MVIY/YMsfpjEk8FJ+vjm/azKn3PdQs9f1Bj0zcX/WLiktHzMoakNvOv
s7qekkEFYS71Ta/Wb/TfL6JClcqwxGZ+e7mim5qpoFHvIb7Z/+6dcb/RSoWz
6vqbvufbtW9/OxVye6Q2/Vwkbq29iwq+D/q2YR6yE3R/+44Ks0/0No0b3bZv
ZJQKmc9wYphJpZelcsepcF2eZdM7r39cdZ2kgmHdiChmU1zGk2/TVOi4mrlp
n9MyUrOzaP9ZxDYduCt4tWSeCqpvlkQwX+ce6fNdpMLv1+82nfr4XuTKChUO
EhM3nRO0xa1yjQqyWec3XWThqhf4hwqa2labLpV7LbnnHxUIq5RN18wrrW5s
UCHjq8Cm/wc7JAdC
       "]]},
     Annotation[#, "Charting`Private`Tag$2064#5"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6938499928335123`*^9, 3.6938500248280277`*^9}, 
   3.693861069306644*^9, 3.693878945660234*^9}]
}, Open  ]],

Cell["\<\
Graphical analysis of equilibria and stability; negative slopes correspond to \
local stability, positive slopes correspond to instability, and stability \
cannot be determined for slope of 0.\
\>", "Text",
 CellChangeTimes->{{3.693860795003354*^9, 3.693860879963806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", " ", "i", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["i", "K"]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "100"}], ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.693878919838748*^9, 3.693878925477154*^9}, {
  3.693879123300673*^9, 3.6938791269629087`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Hk0Vfv7B3BS0iSlgaiIyHgzRCTelamiJMNByXz2QYYynrMdDoUQSRpI
JcltNnSLymmjUiQNSPnWTaTMbqEu4fe5a/3+2uu11t7vvfZn7c/zPHsregXb
+04TERFZKCoi8t+Re+pt/tQUi6lR2X/6v2Nd1pg+1cNivkzv27bpG4tZdmz5
05dNLMZrt3Z54ksWcy/ZeyD/CouJ3jRRLZ/PYsaiB43Nd7MYca9HZ8I3sxju
nplNyZedmUu3f25/f9iZiVY0FF9o68SMnv9eHTzfiYm6dtJfOWc3M5RuNF6n
tZuRuOF4cFncdsaxEz22W7YxEm4XnKOPg5Efq3G72W/KlI6a+XUGqTJreGPy
2/auZrY9Ye37PU8VporyrxieMrollompnwUSt2ad96w3gVJpWbvNXhtsvjR+
wbTXCnv0HEJrf+zGaa/Ma6577VDqWfki39EFZzwWDb7Z4ICxqFeryzX2waYl
53KjOguquj19W3Z64U12zrG+U2740z8+48eYD/LPrRE8KnfHxaVD2lWf2Fjz
Syvheb8HLmo3070n/PHw5EopJwsvyN3LqNVL2I8DIWd/fDnljXWHQvrbdUJw
c0Lt3pxqH3h8ctjBOhKKGUbBmqkVvqgdLbjxYeIAONc8FC9d8sOwIp+2ETuI
Qp2va14W+WGVLWv7fYmDKEh4azN21Q/8grndp6UP4kvKSLd1iR/07cKVHdQO
IkJFNbqx0g8Xr1jm1jkcxOdMj15Bix/oPd3Jd68dRIuR5kpanA2dam2fTJcw
GL1QefTYgw3r09OCw/aFoSut+XipNxvuQS3Rzr5hUBGpUMvzYyNtGT9jeWgY
vKavKA4IZKPrQMO9K8lhqE7wWDkQyUaOUuCC6rthUHevTUpOZ2P64SvC74vD
kSWQj5O+x8Yyt5hnzXLhKH7t6VjxgNxfZ1dTuWI43Fvbvu95SO734Vc3Xysc
UaJBiXmP2KhYZ714jkU4sutmS01vZCOoqytAKSwcYetVbvh1sPHWSlnW4XU4
GuI7JeNnUwjbfqRMrjUcgWUGHc1zKUjtHLDt+BCOqUjjE6rzKVg7lccf6A7H
2AOntEfSFO752PQdE4mAo8Hnpk55CmcFYQ8btCOQ1WVeK9Sm4HH/ka9VagR0
NhrptNpR+C1UE5mfGQHNvsrcr/YUTlen57ScjMDSP4Y/DztQePWM1eh7MQL1
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
       "]]},
     Annotation[#, "Charting`Private`Tag$3489#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.693878949922414*^9, 3.693879086411604*^9, 
  3.693879127430287*^9, 3.6938796959669437`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"logisticEquilibriumFunction", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["i", "K"]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["r", "K"], " ", "i"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69387901902404*^9, 3.693879051037364*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"logisticEquilibriumFunction", "[", "0", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"logisticEquilibriumFunction", "[", "K", "]"}]}], "Input",
 CellChangeTimes->{{3.6938790596348667`*^9, 3.693879075202726*^9}}],

Cell[BoxData["0.9`"], "Output",
 CellChangeTimes->{{3.693879075549951*^9, 3.69387908126857*^9}, 
   3.693879699602098*^9}],

Cell[BoxData[
 RowBox[{"-", "0.9`"}]], "Output",
 CellChangeTimes->{{3.693879075549951*^9, 3.69387908126857*^9}, 
   3.693879699612989*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.4 An SIS Epidemic Model with Saturating Treatment", "Subsection",
 CellChangeTimes->{{3.693861718952367*^9, 3.693861727351758*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SISclosedSaturating", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"s", "[", "t", "]"}]}], "+", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"i", "[", "t", "]"}]}], 
        RowBox[{"1", "+", 
         RowBox[{"i", "[", "t", "]"}]}]]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"s", "[", "t", "]"}]}], "-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"i", "[", "t", "]"}]}], 
        RowBox[{"1", "+", 
         RowBox[{"i", "[", "t", "]"}]}]]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "[", "0", "]"}], "\[Equal]", " ", 
      RowBox[{"1000", "-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "=", "1"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.693879146792345*^9, 3.693879233088128*^9}}],

Cell["\<\
Once again we can reduce the SIS model with saturating treatment to a single \
equation and look for equilibria.\
\>", "Text",
 CellChangeTimes->{{3.6938792494542933`*^9, 3.693879270089501*^9}, {
  3.693879371547216*^9, 3.693879371772015*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1000", "-", "i"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", "i"}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"y", "=", 
       FractionBox["\[Alpha]", "\[Beta]"]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "100"}], ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693879373040169*^9, 3.6938794252405376`*^9}, {
  3.693879496191578*^9, 3.6938795314955673`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
MmiuW8/L4bmq/38J6Gs6
       "]]},
     Annotation[#, "Charting`Private`Tag$4882#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXTX9+sL//yMOMIBBpEOlojmbkG8YnF+xelqWyqxg
OJ9jbWixVIM3gh+9ILxykgOcv+mbfdqTPHU43+tYRPwfXnUHGP8lhxSz1hwH
OF950+aHPrE+cH6McUjh8c/BcP6mxL3nFoZGwvm/Ki6q7tCOh/PVjV69cfZP
gvNXZDX1f/6VAucvEv+gd/BBOoKvd7Xm9ZQsOF96V/9x4+ZcON+0peDtQ8MC
OD/hQYhfRGchnH/82+K1d/8WwfmGh/RSJkaWwPnX3VUkQy6VIvyrl7rJyqUc
zv936uEi/7kVcL6/4smJxcJVcP5inTfXjxZUw/nJM6OYbI7XwPnxB4y1D1rV
wflxczxWl0yth/N9JZ9Mmd3WAOcrTPU8xmffCOeXvvZRlnyN4L+Y1/p/1dIm
OP+uTgz7leBmOL89O4Kx/x+C78/eVXVxewucP7M2Un51SiuczxgY58yj0Abn
v/7HMJnlPILfFXvySl9VO5zvIXl86gKTDoR965OaPB8h+E8WGb+rnNcJ5393
0/KxCe+C87uP7rs6lbkbzrdb2HGvbB+CXxT+Qeh9Tg+cH7Ov1vKneC+cn9Lk
cL/rIoL/VmHhhs11fXD+O868S5H3Efz3n6y+/Lfvh/MB4l3mfg==
       "]]},
     Annotation[#, "Charting`Private`Tag$4882#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{345.5983726556044, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.693879425690885*^9, 3.693879532083364*^9, {3.693879703239086*^9, 
   3.69387970683506*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ch 3: The SIR Model with Demography: General Properties of Planar Systems\
\>", "Section",
 CellChangeTimes->{{3.6938618175581913`*^9, 3.693861841474313*^9}}],

Cell["\<\
We can transform the SIR model with demography into a nondimensional form (eq \
3.6)\
\>", "Text",
 CellChangeTimes->{{3.6938802784278183`*^9, 3.693880297279141*^9}}],

Cell[BoxData[
 RowBox[{"SIRdemoNondimensional", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "-", 
      RowBox[{
       SubscriptBox["R", "0"], " ", 
       RowBox[{"x", "[", "t", "]"}], " ", 
       RowBox[{"y", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["R", "0"], " ", 
         RowBox[{"x", "[", "t", "]"}]}], "-", "1"}], ")"}], " ", "y"}]}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.693880299971531*^9, 3.693880386177739*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Lambda]"}], 
    "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "65"], ",", 
     FractionBox["1", "7"], ",", "0.05", ","}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Rho]", ",", 
    SubscriptBox["R", "0"]}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["\[Mu]", 
     RowBox[{"\[Alpha]", "+", "\[Mu]"}]], ","}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.693880416737328*^9, 3.69388052900915*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 843},
WindowMargins->{{Automatic, -1988}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 124, 1, 148, "Title"],
Cell[707, 25, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[859, 30, 126, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[1010, 35, 133, 1, 44, "Subsection"],
Cell[1146, 38, 2016, 55, 197, "Input"],
Cell[CellGroupData[{
Cell[3187, 97, 1049, 28, 201, "Input"],
Cell[4239, 127, 54218, 958, 250, "Output"]
}, Open  ]],
Cell[58472, 1088, 134, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[58631, 1093, 282, 7, 39, "Input"],
Cell[58916, 1102, 260, 3, 32, "Output"]
}, Open  ]],
Cell[59191, 1108, 123, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[59339, 1113, 406, 11, 48, "Input"],
Cell[59748, 1126, 110, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59907, 1133, 125, 1, 44, "Subsection"],
Cell[60035, 1136, 487, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[60547, 1148, 425, 11, 35, "Input"],
Cell[60975, 1161, 8836, 160, 239, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69860, 1327, 119, 1, 44, "Subsection"],
Cell[69982, 1330, 1986, 52, 178, "Input"],
Cell[71971, 1384, 610, 10, 87, "Text"],
Cell[CellGroupData[{
Cell[72606, 1398, 152, 3, 50, "Input"],
Cell[72761, 1403, 271, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73069, 1412, 983, 25, 180, "Input"],
Cell[74055, 1439, 35949, 641, 247, "Output"]
}, Open  ]],
Cell[110019, 2083, 172, 4, 30, "Text"],
Cell[110194, 2089, 1185, 36, 189, "Input"],
Cell[CellGroupData[{
Cell[111404, 2129, 787, 19, 159, "Input"],
Cell[112194, 2150, 18199, 334, 250, "Output"]
}, Open  ]],
Cell[130408, 2487, 169, 4, 30, "Text"],
Cell[130580, 2493, 1259, 32, 130, "Input"],
Cell[CellGroupData[{
Cell[131864, 2529, 488, 14, 54, "Input"],
Cell[132355, 2545, 45739, 773, 232, "Output"]
}, Open  ]],
Cell[178109, 3321, 282, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[178416, 3330, 514, 14, 107, "Input"],
Cell[178933, 3346, 7185, 132, 236, "Output"]
}, Open  ]],
Cell[186133, 3481, 366, 11, 50, "Input"],
Cell[CellGroupData[{
Cell[186524, 3496, 234, 4, 54, "Input"],
Cell[186761, 3502, 122, 2, 32, "Output"],
Cell[186886, 3506, 139, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187074, 3515, 139, 1, 44, "Subsection"],
Cell[187216, 3518, 1285, 36, 175, "Input"],
Cell[188504, 3556, 253, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[188782, 3565, 700, 19, 126, "Input"],
Cell[189485, 3586, 8000, 149, 222, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197546, 3742, 168, 3, 99, "Section"],
Cell[197717, 3747, 176, 4, 30, "Text"],
Cell[197896, 3753, 884, 26, 96, "Input"],
Cell[198783, 3781, 584, 19, 88, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    181881,       3461]
NotebookOptionsPosition[    179655,       3383]
NotebookOutlinePosition[    180012,       3399]
CellTagsIndexPosition[    179969,       3396]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to Mathematical Epidemiology", "Title",
 CellChangeTimes->{{3.693830631733068*^9, 3.693830638997201*^9}}],

Cell["Notes to accompany course material for PH252B", "Text",
 CellChangeTimes->{{3.693830648286973*^9, 3.693830657507494*^9}}],

Cell[CellGroupData[{

Cell["Ch 2: Introduction to Epidemic Modeling", "Section",
 CellChangeTimes->{{3.693830669994076*^9, 3.6938306771444597`*^9}}],

Cell[CellGroupData[{

Cell["2.1 Kermack-McKendrick SIR Epidemic Model", "Subsection",
 CellChangeTimes->{{3.6938306847205563`*^9, 3.6938306924854918`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SIRclosed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       RowBox[{"i", "[", "t", "]"}], " ", 
       RowBox[{"S", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"S", "[", "t", "]"}]}], "-", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"i", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"R", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"i", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"S", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"100", "-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"R", "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "tmax"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{".01", ",", 
     FractionBox["1", "2"], ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIRcloseSoln", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"SIRclosed", ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "i", ",", "R"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.693830865776443*^9, 3.693830878718182*^9}, {
  3.693830944805834*^9, 3.693830946353621*^9}, {3.693831006701928*^9, 
  3.693831139878756*^9}, {3.693831730328693*^9, 3.6938317937208147`*^9}, {
  3.6938318251862783`*^9, 3.6938318471762114`*^9}, {3.693831914421006*^9, 
  3.693831935587707*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "t", "]"}], "/.", "SIRcloseSoln"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "t", "]"}], "/.", "SIRcloseSoln"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "[", "t", "]"}], "/.", "SIRcloseSoln"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<S\>\"", ",", "\"\<I\>\"", ",", "\"\<R\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (Days)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5/4pouCv1qszM9pw1sr2nSCs6ZPZLL9eh6i7WKiP8D6DXdX7GDpoOLhyqozw
mMT653eddPAmOy6jlHAQz0zLjJsO0jg2KN8lHPGyoi9xnw5y39ilFRFOs1aZ
KziiA2H7g4nXCJe7KqsNZ+vAnb80IZ2wmtY6HYUrOsjzrotKI/xEZNr4yHUd
JN9jP5ZKuOlruSNPsQ5sX47FJxHu81M6IvVYB875E90xhNnCqZW+n3SwQS7M
OYRwvMOa2ntfdXCKo+xqEGFetT+Ns991MFziPBpIeM3C/bdJkzqQin6eEkBY
Ipbyt3CJLtxbG1m8CVukKSqPbNNFDN2/yJFwdr58mZ+vLgqUE17oEm7s8WjM
3a+LFKppmg7h3zxnezuCdNF8ToKhTdgkYJZV/aguime4J2iEZ+WfmvOm6GJj
RbK+GmGHhzZDRbd1keQufUSBcOxo3L/+u0R+p1F/ecIlmypXrCnXxeZ8S3c5
wlxRm6iRNbqoPzVhI0O4Qncw2qxNFyfnXzCkCK9tDds49lMX25dIvBEhrL1Y
ICPyRxdR1dLjWwnvl+vTspsh1pcPXka6Pp248ln1wD10x3gL4UP23GWpAnp4
zGL9eSPhzv4L5rIUPbS5ZISvIXz6V3V0YJgemsKWruQh13udtsfpqB72Sx4L
4iZsetdDy/C4HkYue3ZzEeY8wM0qHK+HF0bB15eS8zBsE9V2Vg9lzipWHIS9
Po0ckynXg0y77wgLYd0nNS4bqvQQ/M/Ik/TW3NOanDV6yLLa+2FxljhvJ+WF
98/14P1Rr2uBsOXbmMhTb/RgPO7ROUdYvW19xOhvPTxperx0hvD64tHdb//q
4aqDSMZfwlMpj9WezelhPOrsFtJ3jff+u8iuj5Kf+WrThMXrS46YrNYHy6sd
UX8I81cbHC5U1CfOI0llkvBg4aFQnyB9yBkN2Y8Sttu08CE/VB8326pnRgg/
/y/O4PsRfSiURGeTzgs5J+h7Qh/+4c1fhgm7a1ZW+WXqw3VCLOo74Q+v5hb2
l+vj57BU/yBhc92T3neq9NF6deA/0tXly9vHa/SR9cgLpLMvbr4S2KCPM09e
XPtK2HEvdILe6uP1/dbgL4Tf/D0Rf2hWH+PVE0oDhHX9eH+WLehDNSNy8hPh
++8zGVNsBphzflBMOr3uumTYMgN8N5GRJE1PaXgRLmSAi6/+besn3LJlGV+E
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
wE6d/7u4JHB6cZGBtWr/9/8AqRxCsA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1590#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JKj8a6bz/Y0Hwc0EVPZ17/X3/8//AOVxOX4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1590#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1590#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Count\"", TraditionalForm], None}, {
        FormBox["\"Time (Days)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 99.99999795918367}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"S\"", "\"I\"", "\"R\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.69383193440633*^9, {3.693832118975716*^9, 3.693832121745489*^9}, 
   3.693833047659713*^9, 3.6938472262371893`*^9}]
}, Open  ]],

Cell["One can also calculate the final size of the epidemic", "Text",
 CellChangeTimes->{{3.693831656715221*^9, 3.69383166572952*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"99", "*", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Beta]", "\[Alpha]"]}], "100"}]]}]], "Input",
 CellChangeTimes->{{3.693831676668435*^9, 3.6938317148790827`*^9}, {
  3.69383180797604*^9, 3.693831808542432*^9}}],

Cell[BoxData["13.398193040424658`"], "Output",
 CellChangeTimes->{{3.693831716657978*^9, 3.6938317448391523`*^9}, {
   3.6938318097379303`*^9, 3.693831841380444*^9}, 3.693831938669606*^9, {
   3.693832117072192*^9, 3.693832123313476*^9}, 3.693833050321938*^9}]
}, Open  ]],

Cell["As well as maximum severity of epidemic", "Text",
 CellChangeTimes->{{3.6938322295598803`*^9, 3.693832241214755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["\[Alpha]", "\[Beta]"]}], "+", 
  RowBox[{
   FractionBox["\[Alpha]", "\[Beta]"], 
   RowBox[{"Log", "[", 
    FractionBox["\[Alpha]", "\[Beta]"], "]"}]}], "+", "99", "+", "1", "-", 
  RowBox[{
   FractionBox["\[Alpha]", "\[Beta]"], 
   RowBox[{"Log", "[", "99", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.693832279919539*^9, 3.6938323555809193`*^9}}],

Cell[BoxData["15.845157764677822`"], "Output",
 CellChangeTimes->{3.693832356299892*^9, 3.693833051488537*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.2 Estimating Parameters from Data", "Subsection",
 CellChangeTimes->{{3.693832563671597*^9, 3.6938325685500507`*^9}}],

Cell["\<\
We note that the number of individuals in the I class at any time t is given \
by an exponential function; thus for a given cohort of infecteds, the \
fraction of individuals who have left the infected compartment is given by \
the exponential distribution parameterized by alpha; mean time spent in the \
infectious class is the inverse of alpha.\
\>", "Text",
 CellChangeTimes->{{3.693832623718779*^9, 3.69383267682593*^9}, {
  3.6938331263316317`*^9, 3.693833134248781*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], " ", "x"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6938330177658157`*^9, 3.693833029406251*^9}, {
  3.693833103809957*^9, 3.69383311631435*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4v8B1owFPg==
       "]]},
     Annotation[#, "Charting`Private`Tag$3781#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{362.63671875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.693833029793284*^9, 3.693833053787426*^9}, {
  3.6938331085544243`*^9, 3.693833116722727*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.3 A Simple SIS Epidemic Model", "Subsection",
 CellChangeTimes->{{3.693833249491323*^9, 3.693833254214837*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SISclosed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"s", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"i", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{"i", "[", "t", "]"}], " ", 
        RowBox[{"s", "[", "t", "]"}]}], "-", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"i", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"1000", "-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "\[Equal]", " ", "1"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "tmax"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{".001", ",", 
     FractionBox["1", "5"], ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIScloseSoln", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"SISclosed", ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6938470821964283`*^9, 3.6938471409842176`*^9}, {
   3.693847171012175*^9, 3.693847201768462*^9}, {3.6938472371678553`*^9, 
   3.6938472596871347`*^9}, {3.6938472944474907`*^9, 3.693847331554594*^9}, {
   3.693847578413116*^9, 3.693847608246169*^9}, 3.693847831148952*^9}],

Cell["\<\
The basic reproductive number can be calculated from the SIS model as below. \
This equation is because the classic R0 applies in a population of only \
susceptibles, that is why we multiply beta, the effective contact rate, by N \
as we assume all N people are S. We divide by alpha because beta*N is number \
of secondary cases produced per unit of time, and the infection lasts for \
1/alpha time.\
\>", "Text",
 CellChangeTimes->{{3.693847754214398*^9, 3.69384776606382*^9}, 
   3.693847833150226*^9, {3.693847941776767*^9, 3.693847976431622*^9}, {
   3.693848014236679*^9, 3.69384806849658*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Beta]", " ", "1000"}], "\[Alpha]"]], "Input",
 CellChangeTimes->{{3.693847768643619*^9, 3.693847777205868*^9}}],

Cell[BoxData["5.`"], "Output",
 CellChangeTimes->{{3.693847777642069*^9, 3.693847786605657*^9}, {
   3.693847823128772*^9, 3.693847852372274*^9}, 3.6938610618224297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "t", "]"}], "/.", "SIScloseSoln"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "t", "]"}], "/.", "SIScloseSoln"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<S\>\"", ",", "\"\<I\>\""}], "}"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (Days)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.69384728091427*^9, 3.6938473039464483`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VSSR+n/+PzZ8Db0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$30135#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF13k01N//B3CEiCJ7QvY9jN1Y5imSiGwha0mSFEWlULYYS1r4SCWptJBE
RZY2KqWkkkJRsitlyZ7l936Pzvf3z8x5nPt8v+593Xvfc85I+QQ5bGdhYmJa
TXyQ39InZq9kS1SZ8KjfL2FmGqLd51Batdv/Io3l5RWb7O1DtKqwwlxF/9u0
B3ua7R6/GaLVaOzdwe7/mHZ4o+br+qvDtJcpDZZjO97SNtfyXJ4+8Ic2FMfd
G5b/njYSHGN7YuQPLfLpbaWJnA80z4mXxlp7R2kZGC/8c7yJVjISt2bi4Bit
lhpbPrDjGy3UI940/9YE7aYR/xGd2+20+j7ZPSNmk7ThL74XQ/O/08oWDxaM
tE3SjohydIzkdNLKnQbFD4lP086csd0xeLyXZm5j6bjpzQztq24OXS2xj/ZT
cVCEJ26WJvtpOG93XD8tt9Vomw1tjlYk8N/Az8M/abGmZmO1T+dpr0592du3
Y5B22+hLFHscM+iZGbVplCHa8UKBr8J/mKHqT3PTuj1E+3yWV7HXlwX7Fp8K
35c/TGvbL0xnt1+EubXaj4Zy/tD8L6ppm9mw4ZJgm+1JiVHaTfA/MG1kg3n3
sW/qWaO0559VXdO92JEc18QUdGaMpjqZ3p8UuRgiTw+b/To+QXP/OGmn0MuJ
ytMyjSlckzQP1acm6slL4OVT56uaOEmTbLeONtXiQi6zRPyuuCmaKc8y+/4T
3KCg6mX/4b807V4qj+4RHjTyBGxOnPxLo71ImqyQ5kXYN74figdmaPUJgyr1
dF48OuLL5b93lqbQ3JCc5LEcVg8X2/bsmKe9VR14uEqWH5R5nzGhoXna0w97
0v2u8yNF0rtexogJZ/ksI1XVBBDqU7Hf6RkTFju+2ZFuIQjznuBnJY3MqOEz
vBV3VRj6CRIi9SIsKCyjLju4TgSqinW7ejxY8G6+0qTklwj4AxT4hbtZkKnC
WUlfJ4qOX21bw8YWQTFWeXO/ljg+pSaXnDRghbIQa2ryX3G8UjfgzItkRSHF
m+/ASwnc2Zte1MLGhg2UcXZXA0lEj1nNU4XYsdc5wciTXRqhGZMOjm7s6OVX
zrCLloa/3rVru7LZcfj+n09H56Vhd4jZNkt+MZ4fFUc/mywkZ+9nzepy4IPS
qZfexvIQIC69YDgHbF7FCN5olAcHjd9c7TEHHB96vOsJUsBg1J6fXus4MdB9
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
csHmBZ8UypmsMPF0ntEfXXjCpiHBClIXFjyjv5qjm80aq/852G1b9USsNabv
LVjxt3Xaee4NaGxd8PdobV/afxtwlW2h/uElOy76rrSBqNSCBdLOfk68ZINy
6QW3vf+ed0PCFhnLFnyNV/nQi/O2cGFa8L0qWe+DMhtxb2KhftW+VWsVbm5E
weiC5wfOePcJ2OH42IKzJXPEjJ3s8GhywYW2b1IdTtvh58yCH0ZMM/m/s8PY
v/qDnVFzz/nt0bhowVLWi2dkXOyR/88BxzOfzv1nD3/mf+t5q5Tc0miPnvmF
epLWAl9nRBzA8s8pNXMakp4OqJhbMK/4qM2TLAe0/XNaSH/AllYHmPzL058t
Mq4SdcT9f44QlOCR3uwIhX/rO33xVODrLEcE/3OeEtur0HZHePxzc2rs8LlV
TpD4Z/ZR5hVVXk4Y/1fP+XTLa/UrTvj2z9c1io9k9zqh5Z/9a2/1vFHe9L9x
JZ9829ndmzDwzyyfiqPyCjZh6p+/rC+/s+nnJrD9m+/T+IpgK3VncP1zw5XD
q2khzmD/526VnntFd5zB/M+Td+2NpEecwfTPEbodYU4aLv/zfNm+kvg9Lv/L
Xw31iGS+8//j1hoWayPGXDD/bz2cL6hNIdqu//MLT/Wdu0L+39TFdkUl5f/v
wqJg4ib9v/8P5J7GyQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$30135#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Count\"", TraditionalForm], None}, {
        FormBox["\"Time (Days)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 99.99999795918367}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"S\"", "\"I\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6938472904990053`*^9, 3.693847344828656*^9}, {
   3.693847575889475*^9, 3.6938476160936527`*^9}, {3.6938478389750023`*^9, 
   3.693847854232547*^9}, 3.693861063036121*^9}]
}, Open  ]],

Cell["\<\
It is possible to reduce the SIS model to a logistic equation because N is \
fixed.\
\>", "Text",
 CellChangeTimes->{{3.69384735747713*^9, 3.693847366317062*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", ",", "K"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", " ", "1000"}], "-", "\[Alpha]"}], ",", 
     FractionBox["r", "\[Beta]"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SISlogistic", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"r", " ", 
       RowBox[{"i", "[", "t", "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"i", "[", "t", "]"}], "K"]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "\[Equal]", "1"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SISlogisticSoln", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"SISlogistic", ",", 
     RowBox[{"{", "i", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6938473961476603`*^9, 3.693847510159264*^9}, {
  3.693848794718251*^9, 3.693848795007441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", "[", "t", "]"}], "/.", "SISlogisticSoln"}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<I\>\"", "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (Days)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.693847517319667*^9, 3.693847552521433*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1nk4Vd/3B3BkppK5DJnneZ7vG5FMmcpQolIkU8hQEjJcKQpJJU0SPgoN
KoqoFKFCKamQUlIyy/g75+r5/v6593k9ez1r7bX3Pvsc8R3BTrsY6Ojo1Igf
8l8iY/5KvmidCZfq3Tv0dH8od1nl1wb6XaBQpbJt83f9odRF3SiQ8yuj6Fvy
2de2/KE0qO3zZfarpURblTxvvTpCeX6szWrC9yXFNE4ofyZijPInkXMgquQ1
5XDaA/OM0THKocdl8lMX2yms3WdMNPeNU3IweWPseCdlMl5LaSpygtJocOT+
kO9nyrJXryxLrk9R/jPiidUu66EMfeiOHTWfpox88LkQXtJLOcUbeGL04zQl
dg1r3+jFL5RmrkaFaJEZyunT9r7DxwcosbU6+pta5iifdC5SVVK/UzwkiyRW
Js5TpN6OFAcm/qC4X07pt6UsUMp5Tw39PPCTQocousbHi5Smkx/2ffcdptyy
/mXGnEgPam5OY5b6H0rQIcurAmP0UPKjeGiW/aG0d4v5DfgwIJTl5MHQkhGK
bcoGD2bHZViw0Kr5c3GMwpx/TMbcjgmX+D7anxAdp0zmye0w7WDCuq9Jn1Xz
xinv6avds7cxIy2xky749AQl63TT3NFDLBB8fMD81/EpyqF9CvGyA2yozpTs
OMYxTYlzus6qmsaObTuafZRSpymN3B76ppocKKAXTd6b+JdyaStH9o8MTqij
7vmPA7MUId6GTTqxK9Gx0t89dXqWUtD/d7ZKggtRn7kH5SLmKGU+BctbqVyo
ifXh8Ns3T0lS08s5unUVrB+y2H/zXaRIP934dq0UD9QXd0zw/1mk8H7z2u57
jQfHxLxaJY3okO66bkZJhRfhO6r2uzyhQ0V004ssSz6s+xby5E4HPdiXXctI
vCoAvRRRwVZBBoy7WByNWC8IJbnmvd+2MmD2bZDynV+C4PGX5RH4ygBt1R7D
1PVr0Pfr4/aoiWUQ/hTW9ENTBG/T0+6c0GfE/dHxxbRZETSp6rMVH2KECWb0
Ip6L4ua+7PL3TEwYkveddtUXQ/yE9aIBPzMym+M3ejJLIDxn2snZgxkS5i2Z
DvES8NMtLNybz4yi5PDmw4sScIimt8+TYcHO597hP5ikIDZ/N29ehxWJah82
eRrLgJc49HwHWWG0YD9/pUMGrBSedSq1rBCyHjzfGyyL4bign9vWsyG54hRb
yU051DBKGzxyZcd6ZSZZpwBF3LzadvzdOXYIeVz8YyijhELLuN4/n9lx5kzm
m9l+JaRTP1DF/ThQETr0JHKfCjw5MzsTojiR5bm8e6JfDQ7XKYrnHnCC+emJ
KCZXdayz/xV7i245tMpqeJma1aF0wkqmn7ocL1b8Hl9bq4E5nsVwizMr0Hjv
aHb/Cy38uV363PPjCrgw+fBmu2qjf5OHcIT4SvjuHitt/6aNF6fvPC4sXgl6
xyQvdy5dtCzXYWP05AJTr+KnZZn6aLPhzm2N4ULJNidFE3UDvEv9LXMmjwuC
757+1u4wQD/TtXUq3VxYjF0QrZA2wty8QJzbllU43nL3q+pfEzAYja+QPLgK
QxWvuMvuUcB64NX5X2dXQWMPyzs7E4Bnklqd0LUKedfkDFeymULh99/JUndu
dFqqDBtXm0FN6W1SZDQ3wPy5jVPFHDr+N3nNznCjq+iWVeQVc5h989fofMeN
RlXqiHPOOrh/+hBI78aDlVI+LeXnLbFN+N7ci0geSM/Ln+iWWQ8fj+y0nNM8
2F4az8t7az1C3toWK3by4OYJfom+DitQWx/2b9rMi5oPduKXKDZI5zwbJhbB
C47isoK2PhtkW0cw/DzFi5mg53lHU21xoUFFLO4NL3x2a8229NqhsubClhIX
PkwXXOq+7eWAB3MHB8PD+RD1c8Da+pED6g3coinZfDi7Z7tNv4QjWiu5Tne0
8yGn/pjF+t+O+Hojvm3BiR+M3Dwct/KdMTjkub0xlB/bk1WLNnO54I+CwZ+s
TH743D1aZJrogrnC0eXybfzYsUbmzoqwTeC9sHODs6MAdnNGXPcPdIVZhsWj
axsFIf+0bRlP9xbEWd8ubgsSBIdF6Wh36FbUMElmzR8XhN8D5WQ7Tk8YxNDt
dm4WxNb2gkcG67dBc081x6LVavR3jpsOB3lDylzddbPZGpRcGQ7T3rATOxYu
IH77GnCeYV82XbITF++vUCiNW4OUHyLNKit8IKw2NEdfuwZHBN+UzL3zAZ/I
tcvXDYVQ38ghJhK3G8xTwr8ZtYXxWdj49Ecef6y7mdap6iKMIMFW/upj/kgI
nHnkESaMVyobzswy78XCl86s8goi3sRk9PTiXky9ytTfqiKCNraTXzvpgvC9
hDXplqwoklZefR+/dh92qc4sV18uBsGu9kn6B/th+yHlqqCoGMLZuyQMVkZA
K4XPmE5VDN4/F6/e3hEBxs9qAS8dxMBaxD3szB6Jy+m+TYHZYqjRHpoI2BKF
z786kkuExCFrekbw0MIBNJzZIZqpJA7b0QfHtzsdxA2LP3eijcXBtYffdlXh
QcSe5/hq5SUO5gsBHJW2MRC2MzMfuCyOwKqv6zfmHIJ7admipIIEtp5/VB7D
Hge4GZ/mMJRAK7vForZ6HOQYX6iM2UigNCJW9LJrHKa3fPOsD5SA9ZkBhdQr
ccjhEHngXSGBPbF8L51149HufzTqvJ4krhb/dlW1S0AVvyBX0gZJaKweK5QM
SsDl+qvXAjwk4WS6q+VGegJC19S9NYyRxImwrJzk1gRwNU1pddVKQo7pgIHc
hiOwk981wr9eCrOPcl9+kU/ETNr+6o+bpaBX1zXgaJaIot9JSQW7pXBRWpJj
u0ciGG8XrtZIloIK/7nenamJqDL5bmr3VAqFDKvfM39JhN+laQ7eN1Iwtz9y
izqdCD5Gtrdd/VLwMru/pWx5EkIa5f39GKWBNPbYXzpJkHHZm3nEXBphRQKv
TJOS0FF5cKu1szRCVlo+mT+dhPjVx2RW7ZRGYWdyoE9JEro/lVblJ0gjRfrl
Du3WJGTt+d13v04aNgfN7y+uSgbd4X2afygyMOuhnmdPS8aN3vj5yo0yiHK/
ubMvNxlb1mU+O+QlA9leZdvwwmRUst3awnFYBh/OR55tepSMgOzxIzI1Mijn
qm30HE3GmilG+18tMhC4VG4iuZCMZ+58grc/yuAjj/RcCVsKJNbqlJrOy0D6
YJojk1gK3hdHdmw1kgV3mv4ueusUJHNS8yVtZSEY5sk24ZwCreBcv8EtspA1
Fu686ZmCE1r35yIPysJZR/fhiZAUWNbOSGVVyeK67KL0n6wUjItzDLs3yWLh
s5DvxrwUXEoUui/WJYs4aqtqXEEK5jYY2d34Kwt513uf3W+n4GbHof2NenKo
PaL8k6ktBUVJPjv6NsihYciELf99CvJ1bDbOesjh3vMLR1l6U3A0V1Be+ZAc
pvREXzoNp2Dn1lvdJ+rk8DnkVMBXNio8lp9tLG6Tw/dkujFJLiocauIq67/I
IVZ2PNSQnwojMfsT40zyWFtGPz8tTgVv/3dzN2t5HD//Y8NTXSrYT71U27dF
Ho+f2az/YkQFnWWlyNEAeSTR/dfRY0rF0LUjU9Xp8sg96Vx+yIaKp3tF/1vb
Lg+xrLCfjp5UPBBmytXrl0dTfW5y3HYqbrb8THSckMd8xBfn7F1U5Kve33ZE
QAGGyyOWBQVSETHmzD2wRQFeuZ/MZg5SEVBgsLgYoIAYkRdWOw9TsWOT+JBg
rAIGi1tMKhOosL/7+6n1RQW8UfhAL5xKhezB1Ogb/QqQvf5rZDybClGlkN3P
JhRQVi2cUX2a6O/jZuceZkX05rWuDDlL9EORUuaWV4RBcUdgwQUq3jHU9uwP
VMRk3rUDlsVUtN662pIeq4giTwFW6n9UPPE5VnUtQxGdLnz1VdepqGhwz35f
oYjahAy5iQoqjh4dX288qQifyOrbz+5TEWf4QWszixL25F5Mzasm+huqEw8W
VEKN7nnzXQ+JfuwzZi8aKIHjgGFu+yMqDLkVyhgPK6FU14hL6RlRn96jsSVD
CVkv3Pdeek6F90jql5yLSjBl6jRf3kRF4qsfAvL1SlBhUvRsbCbi04vj7JiU
MfHbreL9ayI+9v1Zfn5lbL1VtpOtnYrRQLY7n2WUISP0zkm9gwoBuz0/9lkp
wyJp1Q3/t0Q8h7xTTpoyYoqDKqhdRPyMW4BXnjLy5M5mHv5A1BukJstdV8YJ
6c9rQ7qpKG78XlXVqoyQn+gz+UTEpxRJfl6lArOWrXtO9xLxke+MiyRUoMu1
m867jwp+X1a3fZoqeFdhHyL5hejX0u/Ysk0qeOpvvv1cPxHPKDchm6sCixXs
os4DRPy468qRIhUwK59kmSRc9CVFvuq+CvK5XtVmf6eipX7A0/aDClYnDLM3
/CDi4681hIiq4l102fTMTyI+pLNHX1UVA7dWGx8eIup5s8wyQBVuTp8F6X4R
/VJ8VU9tVwVX3OqRKcLF8zK59wtUUUYpSKofJp6PX5tvJtxRRam+Qq/yH2J9
u5ObbRpUIcyaE5lDeLT6G92nAVX4rNp2wWuEOG/G7VrxfGp4YmTX2D5KxYDW
z7qvImrofDk+oDBGRbnSso3WMmrYXl7acJiwmbDmHh5dNYhc5qOXHKfCdzbz
/FU3NTQe8Jx3mKAi237ocbS3GsaC6ecyCT+6ZDFo56eGgIiiHe2EBa2mdSYj
1eBkHJOxcZKK59meryxPqwHLxaN1pqgYH6icXHNBDQ/X9jwNICxmyCUyXKiG
NwO2jy8Rjuqt33O6kpjfWo5hlmkq5FXkln1/owaVnjV9Twlvjo+Xf/CRsJba
sVHCCR1dG098VUM8U6ik6F8qug4cz9ObUEMQ9aR6KOGjz0a1U3nVkdPbF75i
horKNbZbPYXVwTIxp6ZJuC/waoK6lDoM6vexuxI24HV7+V5THZNedUp5hH96
P/RTcFaHhOPIXeFZor/b/BkLHupwX5E2bEB4HUvInbYdRL5HqwLcCOddl2A4
GKoOxh+3LU8Stp1JOffipDquxxUtzhCOsuutu3BGHXrn7nbxzFFRcNHge9gl
dWSIvxdSIjxn+UtLuEId7+jpP3sQvp7l1BrwSh1ib/a9rCDc9e2/cbxTh35B
JRoIMxswCfH1qGMNZ5lmF+FtPXd9Hw6ro1RCpYRunooVyiL0K1ZqILTtuLwV
YYO4CNk+fg1IvDw97UZ4d/tLu0pRDXjbynjvIVwTnXB2m4oGBgRWM6QSDm4Y
0Cyz00CI6seXjwk/Qulepc0aaMf48zbCXNUhV4q3aeB2WLVnL+Hysr/cBcEa
EHW9smue8Ggux2juSQ3kMctqqC8Q54vnlTz/WQ3UGw7aGxPOOp69PeuyBgLr
t63ZQFgrQeT18VsakM8yavAiHLFXtTzhjQbuRquUphJu+Do2sPhRA7rqSVFZ
hAW876099E0DT7hWLjtP+J6LaUbkFDG+UOheRvivsXNQwGpNWOmVG70mbH1P
oPCHuCbi7W7Ivyd8VqP7424FTWiuiOvtIWwgu8tuu6EmrCfp7w4TjuGKVNrs
qYmFLI21HItUNB819GnfpYmW/zZQVxEWYaLLcwjSxIHoyAYBwjV/qRw2hzWR
kbahQZIw3Zezg5RLmsj/JDuiT9jB00viYbEmJFtdxCiEL3VKehjc1ISa13el
dYTNmksbtR5rwjjjZK8d4SN3aorkv2pCub3lpRfhDtUjPYW/NNFsK0vvQ1iq
ZL2g1KQmXkiF8/sRfpL/KkWURQv0fLPDwYSZqX27eeS1wMkyEBJLeDPDtfwT
6lpoc171Jp7wtZi9b5cbaEGz9YBEEmGrfeMWrDZa+JuTczCN8FEPZun5AC2w
ZlfpnCZsosY5+SNcCzd0+xrOEB5h4n72NkYLU2pjlnmE3SpE9pQf08J27iDB
S4SlWbWv7yzVwuXoQY4Swu8+GsQ63NZCibqtTCnhY7ew0fiBFqpcDmveIDy6
zXaEv1kLvn4ZsjcJP7qzU7vppxbWnG+JvU84PG0P890xLRxLVNerJiy7Pbjz
yqwWfg2//vaAcDrnwehDHNoQ5/op9Yjwlp2ZD9UUtWFa1a3QQHiFfm66iKY2
RK/TnXpGuH5Fvhe7oTbGnCiTzwnLVRXT91trY5n1cP4LwpNcdRan/bXRpGSd
8YpwybcG/sRQbTBG7Lz3mrDng+aBkAPa2LXKqKuNXH/fd6nWR7WhlP2K9Q3h
kzXDLfPF2mgW4+R/T3hd9kT+YIU2dJyusnURnt4zG9x5XxuDcVZTpLfxsXBX
NGqjRtGprpuwUoDoZp8f2vi6EMjbQ7jHVErWcUQbv0S2dpPOElCYNv6rDclN
Oy70Ep6p1z4rwKYDjWAVgS+En6+2+9Qkp4MjLGyvvxKOGXYqu6umg6vnZ8O/
EVZ96hZXoKcDjqEx3gHCOSE+ErFWOmgJsd7wnfDOZwd3q/vpYIX3UNIgYR8j
GfvJYB3cKG1k+0l4d8Ur7epIHYwKHzhK2u+cNJNFig7sNxcmDBEOCn55xa1Q
B4lWOxx+Ew7pj04TuaGDta0MD0nvc5cK67ujAyFlVtlhcn/No80CnuqgoTtm
jPQBAcnew/06uNt4PXiEnP+xlufrhnSg3cvbSPoQfVQ527gOFM+7io0SjvvZ
fDhrmS7WbfnvOenk2gjRaxK6OMHTRz9OmKolzhygoIs1Fmk2pFOLX/xS09CF
tFJQFuljWWIPq0x10biRQ3SCcKZv05ZWb13EejetnSSc3R1unuWnC4cKv62k
TzmuVXQL0cUd8VOnSecahs/0HtYFK1c92xTh/JWiZybydWG73eYT6YuJz+Oq
CnXxVtyaa5p8/v+G+h2+oYtoRj5T0gVfnumy1ejilYPCBdIld/e9Ff6oC/+f
XPZ/CZcqCdf09hP5LqtEkr5+qeFq4ZAueh7YXyBdnia0X21OFzJ8lUOkK72e
8qwT0kOEfn3MDOF7HcGzrJJ6aGq7nE/6/oY1X1oU9KBqdLOW9APN4JuuBno4
YhGySLqOZbXjXnc9FOQP7Z8l/O2KivX77XpYZSuSTZoT68zX++uhXSqpgrRb
VLC25EE9WLvzDZIe/v509Yc8PRQO3nCaI8yb9IF7w1U9/GaS3UvaQHyE4+51
Pazwm00gnewuvJBZo4fJ543lpEWaQvuse/SQ2hvKNE/ej7upH+5910Oa1brV
pP0Y8jtkRvSQcDBLifRtg8YGBgZ9pKVXOpK2+W/tf1WShPdsyyEdsl67QE5J
H0/UAgtJ53yxPp+jpQ+fzVyVpPuEIjJCLfSxgnltB+noY81hCr76uG52h2OB
3E+5voDcYH18l6gWJP3kydQu5ih9tAbslSbNNS/h1kfVh4pDmzHpa4HRRmdL
9KHfOehPupktQ5v1lj6akvfvJz16tUAlolof8k/vHSZt8umlmFOzPvrpQrJI
v7GXYWL/TdT79OYu6ZlBw4XISX3c6/R4RFosxXHq64I+XOqvPScdUBvzo26l
AUIN8t+RXqbW3hKtboBvLmsnScs1f28Y0DdA+QGmedL2fgu1m8wMYK/8cNki
4bMX5W+qOxvgKHMhF2n1VXE5P8INYL7hsBzpKtZOuWcxBqD/c0eZtBmdSnVB
ogHap5o1SLsMf/jslW2Agrx8I9IRLbryb28ZoMKt15704pP06lvVBqiWVnIm
TX3w1e7kYwPU6251JX3mv6xQ23YDVOUFeZF+kDpcXT9qgOXUwCDSFvGW9hdn
iPmfHdtHujXqfM8hBkN0v9+5n/RnXxsmfW5DWFKZY0gzWF6zL1M3hH2vN5V0
mvFCzzF9Qyxctkojzau9Kczf1BA2PqLppKWlluVKOxri3ZZTWaStGLx6z4UY
Ypt79XnSr//eCYuOMkSBk8hF0h4jnMyucYao1A25THpvT5UC9wlDbDUcLCSd
XsMfTi0zRBCncRlpgcpA5t13DdFlqVFB+uL1J7nmtYY4vkfoFumKvNCHC62G
2Lu7qZJ0x4FW5v2/DRGndfkhac9Q6TNOk4bIu2ZcS/rbnhhFtQWiX7qXj0hP
uSk4/FxuhEHvjsek1+gmn9mubATZ9pBG0ldUPipStI3A4FTfRFpJRqtG2NgI
YhkczaSN+fr6Om2N8HsxqZW095ixkn2AEXQ+rW0nvZyb7lVHuBGaPGw6aOdB
rT5syyEjlPQGvaGtZ5BltV+6EULn8ztJP/9ub32k3AiGU8UfSO9nWfWb7b4R
jB3yuklLyLSfPFFnhHcnqR9Jx+x0fX++zQj+VRs/k1b75OV3b9wIV81y+0h/
nBPnpMwbId176xfSR4X6y54yGYNPT6ifdL+b31QbvzEePUz9Sjq3PST5l54x
Wp+pfKedn1ENhXBTY4xubqF5lGuiZWaDMXTHfH+QtrWP5mPdYoyvcycHSdM1
xhdIHDLGmr8Ph0hfHzC3Kk4i8oeZ/qLtPzPzkGq6MeQT6mi+bX5U0/iCMeZD
7/4m7VeTWe9aZ4wtjIf+kOb76LL7U6Mxvv/8RnP9LD/7rjZjyNDZj5AW1j/n
GPrFGAlMvKOkX9260nOMyQTBX+LHSB9q25XIs8IEaic6aVYYkZU7y28CCCiO
k05UKQ2+JmsCSY5mmvWKby/UbTBBqcPkBOmvzyIuWzmZgP214STpzG96li89
TPDH6zDNQ5IPj3fvNQHHJ7op0pfynwpPHTeBd/NvmvO2KnVuyjGBnIb0NG19
12SdvJ1vgvciHjSn53gzh5aZ4PW9WpoPpM8OD70ygYzHwb+0/bfdUWLz3gTG
ttdoDmFv9CnpNYGgXBvNu5Nz3vuOmuAHs/QMaadY9cd9PBTY99TSbGeUe8hU
mIKnjv00W80s6F6UoqC3i2WWtElEc6mnNgUcWrY062tp+j4wpkCQMZBmrdEz
4kKWFLz4eYxmxSDfnHebKRBnaKJZRqnVQdeLyK82QLPEoBZHji8FyyOXzZEW
3M0Q5xxFwQlrfZoZt53f03qGgsnlZ2leFGKUUr5MQYthOc0z7/0/pZVQwP/7
Kc1/Nuk5b6imgKFnmOZuu3ajJ90UGP41nifdyWEwJfGVgiJrB5rbGi9WxP+i
gCq2g+bnFkEylAUKLrkn0tyVz8j6cSWgTf+Y5jdb99YbCgJlwZ9pfrWmLeas
GDA5/JfmhpwLI67qgHiV/ALpOhfm0kp94AA7aH7AHbibzww4GbaJ5lvpBh/a
nID5jEM0cxf1qVzyACZYMmgOqTuaELwDaK68QLPSeJc8Zyiw6n4Nzd9lFF8X
xQMvcrpoLnA/GGVxEmh7Nkaz97EXa/suAjYaHIu0818r9Cy2HBj8IEbzu5G9
QUKPgPInWjRnSz3gu/cSyBuypNnBlfOhy2eiX2dXmjmPbvUZ+Q10mu6m+fmD
Uo70BaCRL5zmxOG5mworTDHxMo7mOZfz9D7KppiazKE5vMrY4bytKWrHimhO
qemMcjthCpXYBprP1u+7xNNhihbWjzSXNnA0tQqYYeOdMZprm66Opm4xw/J4
Vjo6ulTwpg53/n1vhiZ6SZr3rNd/uMfNHOs7xWlmiNK+799rjtxIHprzitTv
7PVfh+0aAjTzt0YK/f6zDrcaVtN8cuxhfEikBe69XE6z0cvVMUPjFrA2Xar3
rWR/hF+oJcIKWGh+M30kZf+MJT6JMdP8xDIzNyFhPU7TM9DcZ11pnEpvhdXE
24+cP/3Grr6MOCtYE18vtPvPympUYN4KPG3zSzatpL8YvQF72ZbG15W+lb1P
Zw3WqiVTBabs2lKssTxvKd+cnjLrVyYb+HvQ0eqFeOysnzpig9hnS5b7bZN1
jtMWV/KW3Buv5UM5ZYsYpSUfYPe94CNkB5cfS/l4s850pV6yw9XnS/74ure4
SNQesvVLLuRSiH52zh4yzUu+XSflFSm5ERx9S64LXWsh+99GuM8ueXHotNd3
XgdUrliqly92UdjYxQHsAku+Yd+S7pTpgNf/xh/GzND5vXKAGOOSh7/ELTzl
cQTD/FI+cRuWOUlXR5T+XbL/8dzHC6ccofTPt1/Kp73vcMS+mSWL2fB+mhN0
wvTcko81LKiJeTrh2eKSuUTG7R7lOaGDfqleVtgPf+9uJxxjWDL1yTLjujXO
CP83HsMnulLC3RnOdEvOvHAy4EWeM3L/5SuWZ2oK73GGxT+/Sz8ycnatC/DP
zOP0q+u2ucD/nzdnvn+hesUFd/75mlpFbP6ACxj/5fdrvP6tRWETjP5ZfkeJ
/XzgJqz7Z4a3FXHFpZsg9s8fNty/uennJrD+89vJ1SHWqpuXypP33ZUDypSw
//dXxW+3y29uBtO/+OlbjkYSo5vB/s8xOn1RLmquYPvnxXuhd5KDXP83v6vh
Ww/R33QF3T/bqFlaxEy4/i8/2zODzjAtt//5mafqnr1hbv+LN2BxKL9z3w30
/3yjPIR4D/6//w+LNaW/
          "]]}, 
        Annotation[#, "Charting`Private`Tag$30559#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Count\"", TraditionalForm], None}, {
        FormBox["\"Time (Days)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 99.99999795918367}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"I\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.693847525855402*^9, 3.693847553887815*^9}, 
   3.693847623390222*^9, 3.6938478600536747`*^9, 3.693861066126678*^9}]
}, Open  ]],

Cell["\<\
Solutions to the logistic equation always converge to the endemic equilibrium\
\
\>", "Text",
 CellChangeTimes->{{3.693848447454773*^9, 3.693848458716251*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"logisticEquilibrium", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"i0", ",", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"r", " ", 
             RowBox[{"i", "[", "t", "]"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"i", "[", "t", "]"}], "K"]}], ")"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"i", "[", "0", "]"}], "\[Equal]", "i0"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"{", "i", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "50", ",", "800", ",", "1000", ",", "1500"}], "}"}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.693848578528695*^9, 3.693848615666768*^9}, {
  3.693848715424633*^9, 3.693848723442951*^9}, {3.693848968806286*^9, 
  3.69384897261765*^9}, {3.693850004396536*^9, 3.693850004779327*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "t", "]"}], "&"}], "/@", 
   RowBox[{"logisticEquilibrium", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "//", "\n", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6938499842540417`*^9, 3.693850024186862*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk4VV8XB3Bz5nmehWvmDgmR81WakDIPISEUKUqpVMpwb6IkIY2KEikq
lZSQMktRvwyNhiJllmvIe96/zvN5nvOsvfda66x9NAJ2O2/n4uDgmObk4Pj/
8/LRAD5a0EVr1myyBwfHKFHbru7goX6Q8Hr8TE5depRYfF0Zr65+khDX/Cfl
pTtKXK5KVeNVv0B0WpVukXMaJcJXRu/6q3abcB48XVF/Y5RonwvNGFUrJ+jt
WX5KjmPEku7vOr/VGoiFc0eawh+PEx+rnkcP/2wg+I6+/zTVOk4U3sx++au0
kahJjjxyaWCccIxy3Dq0upmg2nXPrJKdIDIFnmb+CHlDtClaTM7snyAkL9Vz
jf33jpAXb1inbz1J5DZejfyl1km8+yZIPO6bIiazy/S/pHQSfY5fjp3hmibW
hjT1vmN3EtaJ6lvT1KeJYe6/bk/bu4hLh6+9E/adJsxXOq44yewhLneUJE//
N0203Zvn0hn5Qrgfktr64v1f4lijoR1tay/xQuq3c+04mygofUwpOt9LhHuF
PlKXnSXeZa/i1m7uJb7nuVCLLWYJrRDPZ/IWfYRvdvEej+OzRCN3gjGHVD+x
sPg+cEZyjpBd2S355vUAkfPlduhNYp64e+9kd7jxEPHHLq7xYtU/YkhyKMVu
2xDx3VXo7OMf/wid/XbWuhlDhJCZwjyP2CJxzUoot5c9RLCUQ56b+i0S6Q0p
wd6vfhF82RE9U/8Wif29Z8bW+fwmRv+7ziOdz4GrQk3xEmtGiZDp39Vnebhg
vfKwT5zfKKG2ScHtoBIXeiIMTEcOjBIdZ4ZGj9C5IP/u1EBz4SghyDrQ9tmf
C2ezHTawxMcIs9UxCtwvuBCv3Sq62D1GlNZNbv0bx40Q4u2F4agJYteoVkWu
Mi84rk8/7T41QSxkN5T9Xs6LbB7lnsa8CaLfy8TT24kX9Q3Bqrc/TBBf+i6Y
ZSbxQtd1/vr2FZOEm/+uj5fGefEzVOfOZ84pIsomyU/gLR92ph+pbEubJgSV
L91OLuAH19T1Ly9uTxO29q5YWcePHI96jns108SlIna/zAA/GpWlVqdOThOu
u49LrtASgMGtgroNnn+Jess6QZfrAhiuaG+rUZshFA2CWsfzBRHRr9f78C6b
eNy0ImxdszC++nXyVzewiYSDmtmUCWG4fGQZt/SxidG9WTwrFEVg3vTjYL/i
LLGGd+zhv1ARcJfmi8syZ4mz2fIaSwREkR2rYX1g6xxRuGFJiZOLGKqlFC5Y
iC8Q2Y9np8IEJLAstb5yjcECsfxzr1GwugRu8sX0Oa1dIFYuUEyOmUkghf3B
ZGfsAuEW7GohGiwB9y8Zr3N+LhDxhKBefq0EhgrFJ+fIPnnd17GlhykJQY0E
nS/mHNDIU9p8TUca9VZnTY6u4cCOJ1TRv5BGkucVMxVnDnDdyNq/y1saXGlP
1m0J48AV8/f95anSmP03HPLfZQ40SoXkvJ+Sxq8et4I3XJxYNX/d2rJZBs3Z
OnpVzZygCagSn9LlkPxwGW1rJydw79HqmBI5rG+zsfjXzwn7416m5q1yqF3i
s8FqkRP5qYYZOoLyeLY/bccTGhduJIqbNMTLo9iVfbskkwvKP255EUcVcFq8
ST/XnxvWjCzvDWeVUG6mUuYYwY0d3V7bah8poc9vNzF/mBuPF/N+R/YowbJY
ytUjixuN1wNztusq4+cGnyMirdwQ6Q3wfVSjjNXxv98ctORBele5pQWnKmam
xKKdZXnBXyi+8ZuLOjRVAhYXNXkhbfuaLbhTHY62D08W03jhGXg20DlOHfnp
nlf4N/Li2J14KctidTib5NZVxpN92sgOjeHXQHEoXdFgjBczFmZCdbUaCOh2
fcHdzAfVWouoD26aELz4bVdkJx/ii5Sfp+7WxH3vCOUvA3wQztrVHnxSE9xd
zINPOZfAxMZW8thzTeR9fMqINFsCqc3UAgcdLQy8Vy/4fH0J9jb5lZzg1MbO
tuG08oP8eNlpvTzjLQWSaQcJHSY/7H+Ma/eMUPB0E9+fjAx+FP7TfGYvqgOh
N2r2e+7xo/RvfsF1ex3caXHm1ennh3TzK0XTeh38aXxyMGOzAHTqvXUVGnQR
+SohYLeOIKyUmb/W/tKHat9avmmGIJbUTpw7LmyAJi6BwlgIwvzK49N9RgbQ
RurYSS9BdBzfslIr0gCdT8/H5Z0SxFrj+y1n2AawKbl5pXNEECl+KSarJI0g
cbG+a/UTIbTqvenaEWSCyvLko421QrDjEasROWWCsI8OS53eCiG3mG/911IT
vJJ5u8NvSAhXq+35BDioOJjWOROjLIx9vxoJj01UfEsckr0bJ4xOrk83joxT
UbpH2EV+gwi0dyauLbOnozlH6mCxuwjObWtYLhJEx0Ct4tVVQSKQs/RtTIil
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
/f+unKCwFxcZ8H66+n446f8B/jxE2g==
       "]]},
     Annotation[#, "Charting`Private`Tag$31027#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$31027#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbYdAxh0OrDffqT+Vv6kPYy/8NT8wtfy
N+H8des7b+fovYLz0+0vznxT9BnOz3uq+XjLup9wPpdii/p9CwYHGL9P4LTW
wgRmOD/pdsh+5jNscH7h0ZakfHUuOH9jAU+whCcvnL+wOvuVQbgAnN80/0/g
lzeCcD7D5QcOe6qE4Xy1krSKEC1ROP/J1+lh3HvF4Hyvp1m1kwol4Hy/JxO0
5eSk4PxXh5MaTqyVhvP1BK/JOsfLwvlc9l8T73yWg/Pd30Z9VwpVgPNvHEph
jNJRhPO3dhyJU/iK4Kexlj44d04Jzk8uqt7KM0sZztdP1z7nk6gC558X0uEu
tVSF83eva5qtw6wG51czagWcuYvgc92p8sjbog7nP12mOGV+jQacP0VDkmVn
qCacP2FW2vFEBS04P2pK7Dme5wj+D5elP+fv04bzHz91qjjUrgPnL7I1lD6b
qAvnr20tFUzX1YPz20OTvZm/IvimdxaubD+rD+fP0Jy99qy3AZxff6B3hvdO
BN9XOnTpKRVDON8x73i0YCeCP18mSeXMVwRf5fDyaX7RRgj/6R7SurQPwU/7
zHLxpJYxnJ+08ZNCZz+CP+EST++R4wj+vs9qP///R/ABV6jc5w==
       "]]},
     Annotation[#, "Charting`Private`Tag$31027#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
jQoc/IcZ/h+FcWSX
       "]]},
     Annotation[#, "Charting`Private`Tag$31027#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1vxWNGfKRIVT2/jImH/v9Z1s56WCyW9+dcwn57e8aVWhQovNIcLm+/RAv8te
lQoCQeKbtjke1v5LjQri42MqmA27mV8Lk6lAdrq8aaUipqrjWlTg4CzAYx53
Zshb3UeFqXJuZcwnetf98ceoQPy4oYDZnq57odqBCsxDPZs+DAHnzZ2o4CmW
s2n9R2tn/FyoMKpnsGmFiFXneg8qFNvEyG++L3uXTY9coALrLoIcZuenczL0
WCrE8MVIY/YMsfpjEk8FJ+vjm/azKn3PdQs9f1Bj0zcX/WLiktHzMoakNvOv
s7qekkEFYS71Ta/Wb/TfL6JClcqwxGZ+e7mim5qpoFHvIb7Z/+6dcb/RSoWz
6vqbvufbtW9/OxVye6Q2/Vwkbq29iwq+D/q2YR6yE3R/+44Ks0/0No0b3bZv
ZJQKmc9wYphJpZelcsepcF2eZdM7r39cdZ2kgmHdiChmU1zGk2/TVOi4mrlp
n9MyUrOzaP9ZxDYduCt4tWSeCqpvlkQwX+ce6fNdpMLv1+82nfr4XuTKChUO
EhM3nRO0xa1yjQqyWec3XWThqhf4hwqa2labLpV7LbnnHxUIq5RN18wrrW5s
UCHjq8Cm/wc7JAdC
       "]]},
     Annotation[#, "Charting`Private`Tag$31027#5"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6938499928335123`*^9, 3.6938500248280277`*^9}, 
   3.693861069306644*^9}]
}, Open  ]],

Cell["\<\
Graphical analysis of equilibria and stability; negative slopes correspond to \
local stability, positive slopes correspond to instability, and stability \
cannot be determined for slope of 0.\
\>", "Text",
 CellChangeTimes->{{3.693860795003354*^9, 3.693860879963806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["i", "K"]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["r", "K"], " ", "i"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "50"}], ",", "1500"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6938609337990437`*^9, 3.6938610516070538`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAEmWl9v7/SMC6rtWqzMzsP3+gk6wl
w0jAoMI3xgLF7D/s24FiTIZIwITWmeE4vew/xlJezpkMSMBQ/l0Ypa3sP3pA
F6Y0GUfA5E3mhX2O7D/iG4lVajJFwArt9mAuUOw/sdJstNVkQcBaKxgXkNPr
P6GAaORYkzPA+qdag1Pa6j/z6mJH39AqQErwK5Hsveg/jsWGBFUaRkCWNq1f
VcXmP9O7FAuPmVJAjkC9FaTW5D8FALRzvMlaQJiZGQEFvuI/DebRKQM3YUCe
8CWtNcngP6rBsIkMW2VAaC39HPFU3T8Zx0zhwGtpQOwAzK5CK9k/eRCRdIM2
bUBp0PrBM0nVP7Yn3juVqXBACD7CP0kT0T8n6Ufb75RyQEBP0338Sco/gj+Q
9p92dEAcMV0a/pTCP6YQzElCgXZAhJ4wGJFwtD/CA9y662h4QMAqmwSQVpM/
qHHfY4d5ekBIIQHXbimov3Z0wYh4gHxAjM6xm+OvvL89mXfLcGR+QEqOMeNI
Fsa/Z5wQo604gEAO+VgjV3zOvyt9T2+mLYFA8DVgMJMp079UG4hXGDeCQDhR
e2TWaNe/8gOw/bQ7g0Ao5XjJTZTbv4z9wTLVLoRAIH0WrSV437+LtM2DbjaF
QHu7DZPs1+G/hnzDY4sshkBrOuCO9s/jv/WOqAHTHYdArfUjoxq+5b/JXoe7
kyOIQN5hG4Is1ue/mT9QBNgXiUAT0GKgbsrpv87dEmmVIIpAN+9diZ7o6793
xsSLfSSLQK9Kyoro/O2/HcBgPekWjEAsqIbLYu3vvyd39grOHY1AS1t7a+UD
8b8uP3ZnNhOOQINj25Ax//G/qVHlgckDj0DkCXTCivXyv8QQJ9xqBJBAvYhm
2doA9L8zgdC+Mn6QQJoIARBD+vS/VNB2LzcCkUDuYPUrogj2v/Mnkmd9fZFA
Q7qRZxkF97/MJKX+WPaRQMOxZq+d/Pe/WAC1I3F5kkC7gZXcGAn5v2LkORDL
85JAtVJsKawD+r8ep7uKYXiTQCX8nFs2E/u/FA81ZI36k0C/QwaazR38v4h/
IwX7c5RAWowX+HwW/b+vzg40pfeUQG+tgjsjJP6/VCZvKpFylUCFz5We4R//
vzMjx38S65VA4sfwhlYLAMDF/htj0G2WQD6UQ7E3kQDA1eLlDdDnlkAcYWrr
JA4BwPYfjc3w6ZZA4CYBvlIQAcAYXTSNEeyWQKTsl5CAEgHAWteCDFPwlkAs
eMU13BYBwODLHwvW+JZAPI8ggJMfAcDqtFkI3AmXQFq91hQCMQHA/4bNAugr
l0CZGUM+31MBwCDEdMIILpdAXN/ZEA1WAcBCARyCKTCXQCGlcOM6WAHAhHtq
AWs0l0CoMJ6IllwBwApwBwDuPJdAuUf50k1lAcAUWUH9802XQNh1r2e8dgHA
NZbovBRQl0CaO0Y66ngBwFbTj3w1UpdAXgHdDBh7AcCZTd77dlaXQOaMCrJz
fwHAHkJ7+vlel0D2o2X8KogBwEB/IroaYZdAumn8zliKAcBhvMl5O2OXQH4v
k6GGjAHApDYY+Xxnl0AGu8BG4pABwMVzv7idaZdAyoBXGRCTAcDmsGZ4vmuX
QI5G7us9lQHACO4NON9tl0BSDIW+a5cBwCkrtff/b5dAFtIbkZmZAcDqLl3F

       "]]},
     Annotation[#, "Charting`Private`Tag$31347#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.693861022922181*^9, 3.693861071386009*^9}}]
}, Open  ]]
}, Open  ]],

Cell["2.4 An SIS Epidemic Model with Saturating Treatment", "Subsection",
 CellChangeTimes->{{3.693861718952367*^9, 3.693861727351758*^9}}]
}, Open  ]],

Cell["\<\
Ch 3: The SIR Model with Demography: General Properties of Planar Systems\
\>", "Section",
 CellChangeTimes->{{3.6938618175581913`*^9, 3.693861841474313*^9}}]
}, Open  ]]
},
WindowSize->{808, 856},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 124, 1, 148, "Title"],
Cell[707, 25, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[859, 30, 126, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[1010, 35, 133, 1, 44, "Subsection"],
Cell[1146, 38, 2016, 55, 197, "Input"],
Cell[CellGroupData[{
Cell[3187, 97, 1049, 28, 201, "Input"],
Cell[4239, 127, 54199, 958, 250, "Output"]
}, Open  ]],
Cell[58453, 1088, 134, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[58612, 1093, 282, 7, 39, "Input"],
Cell[58897, 1102, 260, 3, 32, "Output"]
}, Open  ]],
Cell[59172, 1108, 123, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[59320, 1113, 406, 11, 48, "Input"],
Cell[59729, 1126, 110, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59888, 1133, 125, 1, 44, "Subsection"],
Cell[60016, 1136, 487, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[60528, 1148, 425, 11, 35, "Input"],
Cell[60956, 1161, 8836, 160, 239, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69841, 1327, 119, 1, 44, "Subsection"],
Cell[69963, 1330, 1835, 50, 178, "Input"],
Cell[71801, 1382, 610, 10, 87, "Text"],
Cell[CellGroupData[{
Cell[72436, 1396, 152, 3, 50, "Input"],
Cell[72591, 1401, 170, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72798, 1408, 983, 25, 180, "Input"],
Cell[73784, 1435, 32982, 593, 247, "Output"]
}, Open  ]],
Cell[106781, 2031, 172, 4, 30, "Text"],
Cell[106956, 2037, 1185, 36, 189, "Input"],
Cell[CellGroupData[{
Cell[108166, 2077, 787, 19, 159, "Input"],
Cell[108956, 2098, 18540, 339, 250, "Output"]
}, Open  ]],
Cell[127511, 2440, 169, 4, 30, "Text"],
Cell[127683, 2446, 1259, 32, 130, "Input"],
Cell[CellGroupData[{
Cell[128967, 2482, 488, 14, 54, "Input"],
Cell[129458, 2498, 45722, 773, 232, "Output"]
}, Open  ]],
Cell[175195, 3274, 282, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[175502, 3283, 541, 16, 107, "Input"],
Cell[176046, 3301, 3244, 68, 235, "Output"]
}, Open  ]]
}, Open  ]],
Cell[179317, 3373, 139, 1, 44, "Subsection"]
}, Open  ]],
Cell[179471, 3377, 168, 3, 99, "Section"]
}, Open  ]]
}
]
*)

